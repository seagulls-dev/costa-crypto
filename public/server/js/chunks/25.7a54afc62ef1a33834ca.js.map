{"version":3,"sources":["webpack:///./resources/routes/wallets/components/AccountsTable/components/AddressesTable/index.js","webpack:///./resources/routes/wallets/components/AccountsTable/index.js","webpack:///./resources/routes/wallets/components/DepositModal/index.js","webpack:///./resources/routes/wallets/components/NewAccountModal/index.js","webpack:///./resources/routes/wallets/components/Portfolio/components/Balance/index.js","webpack:///./resources/routes/wallets/components/Portfolio/components/Distribution/activeShape.js","webpack:///./resources/routes/wallets/components/Portfolio/components/Distribution/index.js","webpack:///./resources/routes/wallets/components/Portfolio/components/PriceList/components/CoinPrice/index.js","webpack:///./resources/routes/wallets/components/Portfolio/components/PriceList/index.js","webpack:///./resources/routes/wallets/components/Portfolio/index.js","webpack:///./resources/routes/wallets/components/RecordsTable/index.js","webpack:///./resources/routes/wallets/components/WithdrawModal/components/AmountInput/index.js","webpack:///./resources/routes/wallets/components/WithdrawModal/index.js","webpack:///./resources/routes/wallets/index.js"],"names":["messages","defineMessages","actionSuccessful","AddressesTable","title","dataIndex","key","render","whiteSpace","record","address","axios","route","intl","walletAccountId","endpoint","walletAccount","walletAddress","id","handleSuccess","handleError","pageSize","Component","pipe","AccountTable","accounts","accountsLoading","auth","currency","x","y","mapStateToProps","connect","showDepositModal","showWithdrawModal","colorPalettes","context","settings","Paragraph","DepositModal","accountId","data","confirmLoading","loading","prevProps","prevState","snapshot","console","visible","account","coin","disabled","confirmations","visibleDepositModal","depositAccountId","hideDepositModal","wallet","successful","NewAccountModal","form","handleFormSuccess","handleFormError","onSuccess","showNewAccountModal","wallets","getFieldDecorator","xs","sm","rules","required","showNewAccountForm","hideNewAccountForm","formHelper","Balance","e","transferRecord","availablePrice","formattedAvailablePrice","user","prevUser","RADIAN","Math","cx","props","cy","midAngle","innerRadius","outerRadius","startAngle","endAngle","fill","payload","percent","value","sin","cos","sx","sy","mx","my","ex","ey","textAnchor","millify","Distribution","activeIndex","index","o","name","total","CoinPrice","styleName","price","priceColor","color","PriceList","scroll","onMouseOut","Portfolio","sellCoinPath","generatePath","menuItemLinks","buyCoinPath","RecordsTable","sorter","sortDate","a","b","formatUTCDate","isConfirmed","text","fixed","onFilter","filters","AmountInput","input","parseFloat","Number","output","converter","rounded","scale","unitPrice","onChange","precision","coinSymbol","marginBottom","PropTypes","isRequired","WithdrawModal","getFieldsValue","values","feeLoading","fee","formattedFee","formatted_fee","getFieldValue","amount","twoFactorSetting","type","min","max","max_transferable","withdrawAccountId","visibleWithdrawModal","hideWithdrawModal","pageTitle","Wallets","recordsTableKey","fetchAccounts","fetchAuthUser","fetchLocaleData","module"],"mappings":"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","file":"js/chunks/25.7a54afc62ef1a33834ca.js","sourcesContent":["import React, {Component} from 'react';\r\nimport {defineMessages, FormattedMessage, injectIntl} from \"react-intl\";\r\nimport ApiService, {route} from \"support/Services/Api\";\r\nimport AsyncTable from \"components/AsyncTable\";\r\nimport {Button, Tooltip} from \"antd\";\r\nimport {handleError, handleSuccess} from \"support/utils/promise\";\r\nimport {pipe} from \"support/utils/common\";\r\n\r\nconst messages = defineMessages({\r\n\tactionSuccessful : {\r\n\t\tdefaultMessage : \"Your action was successful.\",\r\n\t\tid             : \"wallet.action_successful\"\r\n\t},\r\n});\r\n\r\nclass AddressesTable extends Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\r\n\t\tthis.api = new ApiService();\r\n\t}\r\n\r\n\tgetColumn = () => {\r\n\t\treturn [\r\n\t\t\t{\r\n\t\t\t\ttitle     : <FormattedMessage\r\n\t\t\t\t\tdefaultMessage=\"Address\"\r\n\t\t\t\t\tid=\"wallet.address\"/>,\r\n\t\t\t\tdataIndex : 'address',\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\ttitle     : <FormattedMessage\r\n\t\t\t\t\tdefaultMessage=\"Total Received\"\r\n\t\t\t\t\tid=\"wallet.address_total_received\"/>,\r\n\t\t\t\tdataIndex : 'total_received',\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\ttitle  : <FormattedMessage\r\n\t\t\t\t\tdefaultMessage=\"Action\"\r\n\t\t\t\t\tid=\"wallet.action\"/>,\r\n\t\t\t\tkey    : 'action',\r\n\t\t\t\trender : (text, record) => (\r\n\t\t\t\t\t<div style={{whiteSpace : 'nowrap'}}>\r\n\t\t\t\t\t\t{record.reset_webhook && (\r\n\t\t\t\t\t\t\t<Tooltip title=\"Reset Webhook\">\r\n\t\t\t\t\t\t\t\t<Button className=\"m-0 mx-1\" shape=\"circle\"\r\n\t\t\t\t\t\t\t\t        onClick={() => this.resetWebhook(record)}\r\n\t\t\t\t\t\t\t\t        type=\"primary\" icon=\"sync\"/>\r\n\t\t\t\t\t\t\t</Tooltip>\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t)\r\n\t\t\t},\r\n\t\t];\r\n\t};\r\n\r\n\tresetWebhook(address) {\r\n\t\tconst {axios, route} = this.api;\r\n\t\tconst {intl, walletAccountId} = this.props;\r\n\r\n\t\tconst endpoint = route('user.wallet-account.wallet-address.reset-webhook', {\r\n\t\t\twalletAccount : walletAccountId,\r\n\t\t\twalletAddress : address.id\r\n\t\t});\r\n\r\n\t\taxios.post(endpoint.url())\r\n\t\t\t.then(response => handleSuccess(response, () => {\r\n\t\t\t\tthis.table.fetchData();\r\n\t\t\t}, intl.formatMessage(messages.actionSuccessful)))\r\n\t\t\t.catch(error => handleError(error));\r\n\t}\r\n\r\n\trender() {\r\n\t\tconst {walletAccountId} = this.props;\r\n\r\n\t\tconst endpoint = route(\"user.wallet-account.wallet-address.table\", {\r\n\t\t\twalletAccount : walletAccountId\r\n\t\t});\r\n\r\n\t\treturn (\r\n\t\t\t<AsyncTable\r\n\t\t\t\troute={endpoint.url()}\r\n\t\t\t\tpagination={{pageSize : 3}}\r\n\t\t\t\tsize=\"small\"\r\n\t\t\t\tref={(ref) => this.table = ref}\r\n\t\t\t\tcolumns={this.getColumn()}\r\n\t\t\t\tclassName=\"mt-1\"/>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default pipe(\r\n\tinjectIntl\r\n)(AddressesTable);","import React, {Component} from 'react';\r\nimport {Divider, Table} from \"antd\";\r\nimport AddressesTable from \"./components/AddressesTable\";\r\nimport Auth from \"support/Auth\";\r\nimport {FormattedMessage} from \"react-intl\";\r\nimport Widget from \"components/Widget\";\r\nimport {pipe} from \"support/utils/common\";\r\nimport {connect} from \"react-redux\";\r\n\r\nimport {showDepositModal, showWithdrawModal} from \"redux/actions/Wallet\";\r\n\r\nclass AccountTable extends Component {\r\n\tshowDepositModal(id) {\r\n\t\tthis.props.showDepositModal(id);\r\n\t}\r\n\r\n\tshowWithdrawModal(id) {\r\n\t\tthis.props.showWithdrawModal(id);\r\n\t}\r\n\r\n\tcolumns = () => {\r\n\t\treturn [\r\n\t\t\t{\r\n\t\t\t\ttitle     : <FormattedMessage\r\n\t\t\t\t\tdefaultMessage=\"Coin\"\r\n\t\t\t\t\tid=\"wallet.coin\"/>,\r\n\t\t\t\tdataIndex : 'coin',\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\ttitle     : <FormattedMessage\r\n\t\t\t\t\tdefaultMessage=\"Available\"\r\n\t\t\t\t\tid=\"wallet.available\"/>,\r\n\t\t\t\tdataIndex : 'available',\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\ttitle     : <FormattedMessage\r\n\t\t\t\t\tdefaultMessage=\"On Trade\"\r\n\t\t\t\t\tid=\"wallet.on_trade\"/>,\r\n\t\t\t\tdataIndex : 'balance_on_trade',\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\ttitle     : <FormattedMessage\r\n\t\t\t\t\tdefaultMessage=\"Valuation\"\r\n\t\t\t\t\tid=\"wallet.valuation\"/>,\r\n\t\t\t\tdataIndex : 'formatted_available_price',\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\ttitle  : <FormattedMessage\r\n\t\t\t\t\tdefaultMessage=\"Action\"\r\n\t\t\t\t\tid=\"table.action\"/>,\r\n\t\t\t\tkey    : 'action',\r\n\t\t\t\trender : (text, record) => (\r\n\t\t\t\t\t<div style={{whiteSpace : 'nowrap'}}>\r\n\t\t\t\t\t\t<a onClick={(e) => this.showDepositModal(record.id)}>\r\n\t\t\t\t\t\t\t<FormattedMessage\r\n\t\t\t\t\t\t\t\tdefaultMessage=\"Deposit\"\r\n\t\t\t\t\t\t\t\tid=\"wallet.deposit\"/>\r\n\t\t\t\t\t\t</a>\r\n\t\t\t\t\t\t<Divider type=\"vertical\"/>\r\n\t\t\t\t\t\t<a onClick={(e) => this.showWithdrawModal(record.id)}>\r\n\t\t\t\t\t\t\t<FormattedMessage\r\n\t\t\t\t\t\t\t\tdefaultMessage=\"Withdraw\"\r\n\t\t\t\t\t\t\t\tid=\"wallet.withdraw\"/>\r\n\t\t\t\t\t\t</a>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t),\r\n\t\t\t},\r\n\t\t];\r\n\t};\r\n\r\n\trender() {\r\n\t\tconst {accounts, accountsLoading, auth} = this.props;\r\n\r\n\t\treturn (\r\n\t\t\t<Widget styleName=\"cp-card-table\"\r\n\t\t\t        title={\r\n\t\t\t\t        <FormattedMessage\r\n\t\t\t\t\t        defaultMessage=\"Accounts List\"\r\n\t\t\t\t\t        id=\"wallet.account_list\"/>\r\n\t\t\t        }\r\n\t\t\t        extra={\r\n\t\t\t\t        <FormattedMessage\r\n\t\t\t\t\t        defaultMessage=\"Currency ({currency})\"\r\n\t\t\t\t\t        id=\"wallet.currency_highlight\"\r\n\t\t\t\t\t        values={{\r\n\t\t\t\t\t        \tcurrency : auth.user.currency\r\n\t\t\t\t\t        }}/>\r\n\t\t\t        }>\r\n\t\t\t\t<Table columns={this.columns()}\r\n\t\t\t\t       className=\"mt-1\"\r\n\t\t\t\t       expandedRowRender={(record) => (\r\n\t\t\t\t\t       <AddressesTable\r\n\t\t\t\t\t\t       pagination={{pageSize : 3}}\r\n\t\t\t\t\t\t       walletAccountId={record.id}/>\r\n\t\t\t\t       )}\r\n\t\t\t\t       loading={accountsLoading}\r\n\t\t\t\t       size=\"middle\"\r\n\t\t\t\t       rowKey=\"id\"\r\n\t\t\t\t       scroll={{x : true, y : false}}\r\n\t\t\t\t       dataSource={accounts}/>\r\n\t\t\t</Widget>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nconst mapStateToProps = ({\r\n\twallet : {\r\n\t\taccountsLoading,\r\n\t\taccounts\r\n\t},\r\n\tauth\r\n}) => ({\r\n\taccountsLoading,\r\n\taccounts,\r\n\tauth : new Auth(auth)\r\n});\r\n\r\nexport default pipe(\r\n\tconnect(\r\n\t\tmapStateToProps,\r\n\t\t{\r\n\t\t\tshowDepositModal,\r\n\t\t\tshowWithdrawModal\r\n\t\t}\r\n\t)\r\n)(AccountTable)","import React, {Component} from 'react';\r\nimport {FormattedMessage} from \"react-intl\";\r\nimport {Alert, Icon, Modal, Result, Spin, Typography} from \"antd\";\r\nimport {pipe} from \"support/utils/common\";\r\nimport {hideDepositModal, showDepositModal} from \"redux/actions/Wallet\";\r\nimport {connect} from \"react-redux\";\r\nimport {find} from \"lodash\";\r\nimport {handleError, handleSuccess} from \"support/utils/promise\";\r\nimport ApiService from \"support/Services/Api\";\r\nimport QRCode from \"qrcode.react\"\r\nimport context from \"context\";\r\n\r\nconst {colorPalettes} = context.settings;\r\nconst {Paragraph} = Typography;\r\n\r\nclass DepositModal extends Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\r\n\t\tthis.state = {\r\n\t\t\tloading        : false,\r\n\t\t\tconfirmLoading : false,\r\n\t\t\taddress        : \"\"\r\n\t\t};\r\n\r\n\t\tthis.api = new ApiService();\r\n\t}\r\n\r\n\thideModal = () => {\r\n\t\tthis.props.hideDepositModal();\r\n\t};\r\n\r\n\tgetAccount() {\r\n\t\tconst {accounts, accountId} = this.props;\r\n\t\treturn find(accounts, {id : accountId})\r\n\t}\r\n\r\n\tcomponentDidMount() {\r\n\t\tthis.getLatestAddress();\r\n\t}\r\n\r\n\tcomponentDidUpdate(prevProps, prevState, snapshot) {\r\n\t\tif (prevProps.accountId !== this.props.accountId) {\r\n\t\t\tconsole.log('Updated DepositModal Component');\r\n\t\t\tthis.getLatestAddress();\r\n\t\t}\r\n\t}\r\n\r\n\tgenerateAddress = () => {\r\n\t\tconst {accountId} = this.props;\r\n\t\tif (!accountId) return;\r\n\t\tconst {axios, route} = this.api;\r\n\r\n\t\tconst endpoint = route('user.wallet-account.generate-address', {\r\n\t\t\twalletAccount : accountId\r\n\t\t});\r\n\r\n\t\taxios.post(endpoint.url())\r\n\t\t\t.then(response => handleSuccess(response, (data) => {\r\n\t\t\t\tthis.setState({\r\n\t\t\t\t\taddress        : data.address,\r\n\t\t\t\t\tconfirmLoading : false\r\n\t\t\t\t});\r\n\t\t\t}))\r\n\t\t\t.catch(error => handleError(error, () => {\r\n\t\t\t\tthis.setState({confirmLoading : false});\r\n\t\t\t}));\r\n\r\n\t\tthis.setState({confirmLoading : true});\r\n\r\n\t};\r\n\r\n\tcomponentWillUnmount() {\r\n\t\tthis.api.cancel()\r\n\t}\r\n\r\n\tgetLatestAddress() {\r\n\t\tconst {accountId} = this.props;\r\n\t\tif (!accountId) return;\r\n\t\tconst {axios, route} = this.api;\r\n\r\n\t\tconst endpoint = route('user.wallet-account.latest-address', {\r\n\t\t\twalletAccount : accountId\r\n\t\t});\r\n\r\n\t\taxios.get(endpoint.url())\r\n\t\t\t.then(response => handleSuccess(response, (data) => {\r\n\t\t\t\tthis.setState({\r\n\t\t\t\t\taddress : data.address,\r\n\t\t\t\t\tloading : false\r\n\t\t\t\t});\r\n\t\t\t}))\r\n\t\t\t.catch(error => handleError(error, () => {\r\n\t\t\t\tthis.setState({loading : false});\r\n\t\t\t}));\r\n\r\n\t\tthis.setState({loading : true, address : \"\"});\r\n\t}\r\n\r\n\trender() {\r\n\t\tconst {visible} = this.props;\r\n\t\tconst account = this.getAccount();\r\n\r\n\t\treturn (\r\n\t\t\t<div>\r\n\t\t\t\t<Modal visible={visible}\r\n\t\t\t\t       title={\r\n\r\n\t\t\t\t\t       <FormattedMessage\r\n\t\t\t\t\t\t       defaultMessage=\"Deposit {coin}\"\r\n\t\t\t\t\t\t       id=\"wallet.deposit_modal_title\"\r\n\t\t\t\t\t\t       values={{\r\n\t\t\t\t\t\t\t       coin : <b>{account ? account.wallet.coin.name : \"Coin\"}</b>\r\n\t\t\t\t\t\t       }}/>\r\n\t\t\t\t       }\r\n\t\t\t\t       confirmLoading={this.state.confirmLoading}\r\n\t\t\t\t       onCancel={this.hideModal}\r\n\t\t\t\t       onOk={this.generateAddress}\r\n\t\t\t\t       okButtonProps={{disabled : !account}}\r\n\t\t\t\t       okText={\r\n\t\t\t\t\t       <span>\r\n\t\t\t\t\t\t       <FormattedMessage\r\n\t\t\t\t\t\t\t       defaultMessage=\"Generate New Address\"\r\n\t\t\t\t\t\t\t       id=\"wallet.deposit_modal_ok\"/>\r\n\t\t\t\t\t       </span>\r\n\t\t\t\t       }>\r\n\t\t\t\t\t<Spin spinning={this.state.loading}>\r\n\t\t\t\t\t\t{account && this.state.address ?\r\n\t\t\t\t\t\t\t<React.Fragment>\r\n\t\t\t\t\t\t\t\t<Alert className=\"mb-1\"\r\n\t\t\t\t\t\t\t\t       showIcon\r\n\t\t\t\t\t\t\t\t       type=\"info\"\r\n\t\t\t\t\t\t\t\t       message={\r\n\t\t\t\t\t\t\t\t\t       <FormattedMessage\r\n\t\t\t\t\t\t\t\t\t\t       id=\"wallet.deposit_confirmation_info\"\r\n\t\t\t\t\t\t\t\t\t\t       defaultMessage={\r\n\t\t\t\t\t\t\t\t\t\t\t       \"Depositing to the below address requires confirmations of the \" +\r\n\t\t\t\t\t\t\t\t\t\t\t       \"entire network. It will arrive after {confirmations} confirmations.\"\r\n\t\t\t\t\t\t\t\t\t\t       }\r\n\t\t\t\t\t\t\t\t\t\t       values={{\r\n\t\t\t\t\t\t\t\t\t\t\t       confirmations : <b>{account.wallet.min_confirmations}</b>\r\n\t\t\t\t\t\t\t\t\t\t       }}/>\r\n\t\t\t\t\t\t\t\t       }/>\r\n\t\t\t\t\t\t\t\t<div className=\"text-center my-3\">\r\n\t\t\t\t\t\t\t\t\t<QRCode value={this.state.address}\r\n\t\t\t\t\t\t\t\t\t        size={150}\r\n\t\t\t\t\t\t\t\t\t        className=\"img-thumbnail\"/>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<Paragraph copyable\r\n\t\t\t\t\t\t\t\t           className=\"text-center my-3 cp-fs-lg\">\r\n\t\t\t\t\t\t\t\t\t{this.state.address}\r\n\t\t\t\t\t\t\t\t</Paragraph>\r\n\r\n\t\t\t\t\t\t\t\t<Alert className=\"mb-1\"\r\n\t\t\t\t\t\t\t\t       showIcon\r\n\t\t\t\t\t\t\t\t       type=\"warning\"\r\n\t\t\t\t\t\t\t\t       message={\r\n\t\t\t\t\t\t\t\t\t       <FormattedMessage\r\n\t\t\t\t\t\t\t\t\t\t       defaultMessage={\r\n\t\t\t\t\t\t\t\t\t\t\t       \"Receiving on multiple addresses will cause higher transaction \" +\r\n\t\t\t\t\t\t\t\t\t\t\t       \"fee on your next external transfer. You should only generate new address \" +\r\n\t\t\t\t\t\t\t\t\t\t\t       \"when you are receiving significant funds on it.\"\r\n\t\t\t\t\t\t\t\t\t\t       }\r\n\t\t\t\t\t\t\t\t\t\t       id=\"wallet.generate_new_address_warning\"/>\r\n\t\t\t\t\t\t\t\t       }/>\r\n\t\t\t\t\t\t\t</React.Fragment> :\r\n\t\t\t\t\t\t\t<Result\r\n\t\t\t\t\t\t\t\ticon={\r\n\t\t\t\t\t\t\t\t\t<Icon type=\"frown\"\r\n\t\t\t\t\t\t\t\t\t      twoToneColor={colorPalettes['@primary-color']}\r\n\t\t\t\t\t\t\t\t\t      theme=\"twoTone\"/>\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\textra={\r\n\t\t\t\t\t\t\t\t\t<span className=\"text-muted\">\r\n\t\t\t\t\t\t\t\t\t\t<FormattedMessage\r\n\t\t\t\t\t\t\t\t\t\t\tdefaultMessage=\"Account not found.\"\r\n\t\t\t\t\t\t\t\t\t\t\tid=\"wallet.account_not_found\"/>\r\n\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\tstatus=\"info\"/>\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t</Spin>\r\n\t\t\t\t</Modal>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nconst mapStateToProps = ({\r\n\twallet : {\r\n\t\taccounts,\r\n\t\tvisibleDepositModal,\r\n\t\tdepositAccountId\r\n\t}\r\n}) => ({\r\n\taccounts,\r\n\tvisible   : visibleDepositModal,\r\n\taccountId : depositAccountId\r\n});\r\n\r\nexport default pipe(\r\n\tconnect(\r\n\t\tmapStateToProps,\r\n\t\t{\r\n\t\t\tshowDepositModal,\r\n\t\t\thideDepositModal\r\n\t\t}\r\n\t)\r\n)(DepositModal);","import React, {Component} from 'react';\r\nimport {Form, Modal, Select} from \"antd\";\r\nimport {pipe} from \"support/utils/common\";\r\nimport {connect} from \"react-redux\";\r\nimport {defineMessages, FormattedMessage} from \"react-intl\";\r\nimport formHelper from \"support/Helpers/Form\";\r\nimport ApiService from \"support/Services/Api\";\r\nimport {handleFormError, handleFormSuccess} from \"support/utils/promise\";\r\nimport {hideNewAccountForm, showNewAccountForm} from \"redux/actions/Wallet\"\r\nimport {isEmpty} from \"lodash\";\r\n\r\nconst messages = defineMessages({\r\n\twallet : {\r\n\t\tdefaultMessage : \"Select a wallet...\",\r\n\t\tid             : \"wallet.wallet_select_placeholder\"\r\n\t},\r\n\r\n\tsuccessful : {\r\n\t\tdefaultMessage : \"Your account has been added successfully.\",\r\n\t\tid             : \"wallet.added_account_successfully\"\r\n\t},\r\n});\r\n\r\nclass NewAccountModal extends Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\r\n\t\tthis.api = new ApiService();\r\n\r\n\t\tthis.state = {\r\n\t\t\tconfirmLoading : false,\r\n\t\t};\r\n\t}\r\n\r\n\tcomponentWillUnmount() {\r\n\t\tthis.api.cancel()\r\n\t}\r\n\r\n\thideModal = () => {\r\n\t\tthis.props.hideNewAccountForm();\r\n\t};\r\n\r\n\thandleSubmit = () => {\r\n\t\tconst {axios, route} = this.api;\r\n\t\tconst endpoint = route('wallet.add-account');\r\n\t\tconst {form, intl} = this.props;\r\n\r\n\t\tform.validateFields((errors, values) => {\r\n\t\t\tif (isEmpty(errors)) {\r\n\t\t\t\taxios.post(endpoint.url(), values)\r\n\t\t\t\t\t.then(response => handleFormSuccess(response, form, () => {\r\n\t\t\t\t\t\tthis.setState({confirmLoading : false});\r\n\t\t\t\t\t\tthis.props.hideNewAccountForm();\r\n\t\t\t\t\t\tthis.triggerSuccess();\r\n\t\t\t\t\t}, intl.formatMessage(messages.successful)))\r\n\t\t\t\t\t.catch(error => handleFormError(error, form, values, () => {\r\n\t\t\t\t\t\tthis.setState({confirmLoading : false});\r\n\t\t\t\t\t}));\r\n\r\n\t\t\t\tthis.setState({confirmLoading : true});\r\n\t\t\t}\r\n\t\t});\r\n\t};\r\n\r\n\ttriggerSuccess() {\r\n\t\tconst {onSuccess} = this.props;\r\n\t\tif (typeof onSuccess === \"function\") {\r\n\t\t\treturn onSuccess();\r\n\t\t}\r\n\t}\r\n\r\n\trender() {\r\n\t\tconst {confirmLoading} = this.state;\r\n\t\tconst {showNewAccountModal, form, intl, wallets} = this.props;\r\n\t\tconst {getFieldDecorator} = form;\r\n\r\n\t\treturn (\r\n\t\t\t<Modal className=\"cp-modal-sm\"\r\n\t\t\t       visible={showNewAccountModal}\r\n\t\t\t       onCancel={this.hideModal}\r\n\t\t\t       confirmLoading={confirmLoading}\r\n\t\t\t       onOk={this.handleSubmit}\r\n\t\t\t       title={\r\n\t\t\t\t       <FormattedMessage\r\n\t\t\t\t\t       defaultMessage=\"Add Account\"\r\n\t\t\t\t\t       id=\"wallet.add_account\"/>\r\n\t\t\t       }\r\n\t\t\t       okText={\r\n\t\t\t\t       <span>\r\n\t\t\t\t\t       <FormattedMessage\r\n\t\t\t\t\t\t       defaultMessage=\"Add\"\r\n\t\t\t\t\t\t       id=\"common.add\"/>\r\n\t\t\t\t       </span>\r\n\t\t\t       }>\r\n\t\t\t\t<Form.Item labelCol={{xs : 24, sm : 8}}\r\n\t\t\t\t           wrapperCol={{xs : 24, sm : 16}}\r\n\t\t\t\t           labelAlign=\"left\"\r\n\t\t\t\t           label={\r\n\t\t\t\t\t           <FormattedMessage\r\n\t\t\t\t\t\t           defaultMessage=\"Wallet\"\r\n\t\t\t\t\t\t           id=\"common.select_wallet\"/>\r\n\t\t\t\t           }>\r\n\t\t\t\t\t{getFieldDecorator('wallet', {\r\n\t\t\t\t\t\trules : [{required : true}],\r\n\t\t\t\t\t})(\r\n\t\t\t\t\t\t<Select className=\"w-100\"\r\n\t\t\t\t\t\t        placeholder={intl.formatMessage(messages.wallet)}>\r\n\t\t\t\t\t\t\t{wallets.map((wallet) => (\r\n\t\t\t\t\t\t\t\t<Select.Option key={wallet.id} value={wallet.id}>\r\n\t\t\t\t\t\t\t\t\t{wallet.coin.name}\r\n\t\t\t\t\t\t\t\t</Select.Option>\r\n\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t</Select>\r\n\t\t\t\t\t)}\r\n\t\t\t\t</Form.Item>\r\n\t\t\t</Modal>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nconst mapStateToProps = ({\r\n\twallet      : {\r\n\t\tshowNewAccountModal\r\n\t},\r\n\tcollections : {\r\n\t\twallets,\r\n\t},\r\n}) => ({\r\n\tshowNewAccountModal,\r\n\twallets\r\n});\r\n\r\nexport default pipe(\r\n\tconnect(\r\n\t\tmapStateToProps,\r\n\t\t{\r\n\t\t\tshowNewAccountForm,\r\n\t\t\thideNewAccountForm\r\n\t\t}\r\n\t),\r\n\tformHelper(),\r\n)(NewAccountModal);\r\n","import React, {Component} from 'react';\r\nimport {pipe} from \"support/utils/common\";\r\nimport PrivateBroadcast from \"support/Services/Broadcast/Private\";\r\nimport {connect} from \"react-redux\";\r\nimport Auth from \"support/Auth\";\r\nimport ApiService from \"support/Services/Api\";\r\nimport {handleError, handleSuccess} from \"support/utils/promise\";\r\nimport {Spin} from \"antd\";\r\n\r\nclass Balance extends Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\r\n\t\tthis.broadcast = new PrivateBroadcast();\r\n\t\tthis.api = new ApiService();\r\n\r\n\t\tthis.state = {\r\n\t\t\tavailablePrice          : 0,\r\n\t\t\tformattedAvailablePrice : \"0\",\r\n\t\t\tloading                 : false,\r\n\t\t};\r\n\t}\r\n\r\n\tcomponentDidMount() {\r\n\t\tthis.bindBroadcastEvents();\r\n\t\tthis.fetchBalance();\r\n\t}\r\n\r\n\tbindBroadcastEvents() {\r\n\t\tthis.resetBroadcastChannel();\r\n\t\tthis.broadcast.listen('TransferRecordSaved', this.transferRecordSavedListener);\r\n\t}\r\n\r\n\tcomponentWillUnmount() {\r\n\t\tthis.api.cancel();\r\n\t\tthis.broadcast.unbind();\r\n\t}\r\n\r\n\tresetBroadcastChannel() {\r\n\t\tconst {auth} = this.props;\r\n\t\tif (auth.check()) {\r\n\t\t\tthis.broadcast.setChannel('Auth.User.' + auth.user.id)\r\n\t\t} else {\r\n\t\t\tthis.broadcast.unbind();\r\n\t\t}\r\n\t}\r\n\r\n\tcomponentDidUpdate(prevProps, prevState, snapshot) {\r\n\t\tconst user = this.props.auth.user;\r\n\t\tconst prevUser = prevProps.auth.user;\r\n\r\n\t\tif (prevUser.id !== user.id) {\r\n\t\t\tconsole.log('Updated Balance Component');\r\n\t\t\tthis.resetBroadcastChannel();\r\n\t\t}\r\n\t}\r\n\r\n\ttransferRecordSavedListener = (e) => {\r\n\t\tif (e.transferRecord) {\r\n\t\t\tconst transferRecord = e.transferRecord;\r\n\t\t\tif (transferRecord.confirmed) {\r\n\t\t\t\tthis.fetchBalance();\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\r\n\tfetchBalance() {\r\n\t\tconst {axios, route} = this.api;\r\n\r\n\t\tconst endpoint = route('user.wallet-account.total-available-price');\r\n\r\n\t\taxios.post(endpoint.url())\r\n\t\t\t.then(response => handleSuccess(response, (data) => {\r\n\t\t\t\tthis.setState({\r\n\t\t\t\t\tavailablePrice          : data.price,\r\n\t\t\t\t\tformattedAvailablePrice : data.formattedPrice,\r\n\t\t\t\t\tloading                 : false\r\n\t\t\t\t});\r\n\t\t\t}))\r\n\t\t\t.catch(error => handleError(error, () => {\r\n\t\t\t\tthis.setState({loading : false});\r\n\t\t\t}));\r\n\r\n\t\tthis.setState({loading : true});\r\n\t}\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<Spin spinning={this.state.loading}>\r\n\t\t\t\t<div className=\"my-2 my-lg-3\">\r\n\t\t\t\t\t<div className=\"mr-2 cp-fs-3x font-weight-medium d-inline-block\">\r\n\t\t\t\t\t\t<span> {this.state.formattedAvailablePrice} </span>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</Spin>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nconst mapStateToProps = ({\r\n\tauth\r\n}) => ({\r\n\tauth : new Auth(auth)\r\n});\r\nexport default pipe(\r\n\tconnect(\r\n\t\tmapStateToProps\r\n\t)\r\n)(Balance);","import {Sector} from \"recharts\";\r\nimport React from 'react';\r\nimport millify from \"millify\";\r\n\r\nexport default (props) => {\r\n\tconst RADIAN = Math.PI / 180;\r\n\r\n\tconst {\r\n\t\tcx, cy, midAngle, innerRadius, outerRadius, startAngle, endAngle,\r\n\t\tfill, payload, percent, value,\r\n\t} = props;\r\n\tconst sin = Math.sin(-RADIAN * midAngle);\r\n\tconst cos = Math.cos(-RADIAN * midAngle);\r\n\tconst sx = cx + (outerRadius + 10) * cos;\r\n\tconst sy = cy + (outerRadius + 10) * sin;\r\n\tconst mx = cx + (outerRadius + 30) * cos;\r\n\tconst my = cy + (outerRadius + 30) * sin;\r\n\tconst ex = mx + (cos >= 0 ? 1 : -1) * 22;\r\n\tconst ey = my;\r\n\tconst textAnchor = cos >= 0 ? 'start' : 'end';\r\n\r\n\treturn (\r\n\t\t<g>\r\n\t\t\t<text x={cx}\r\n\t\t\t      y={cy}\r\n\t\t\t      dy={8}\r\n\t\t\t      textAnchor=\"middle\"\r\n\t\t\t      fill={fill}>\r\n\t\t\t\t{payload.name}\r\n\t\t\t</text>\r\n\t\t\t<Sector\r\n\t\t\t\tcx={cx}\r\n\t\t\t\tcy={cy}\r\n\t\t\t\tinnerRadius={innerRadius}\r\n\t\t\t\touterRadius={outerRadius}\r\n\t\t\t\tendAngle={endAngle}\r\n\t\t\t\tstartAngle={startAngle}\r\n\t\t\t\tfill={fill}/>\r\n\t\t\t<Sector\r\n\t\t\t\tcx={cx}\r\n\t\t\t\tcy={cy}\r\n\t\t\t\tstartAngle={startAngle}\r\n\t\t\t\tendAngle={endAngle}\r\n\t\t\t\tinnerRadius={outerRadius + 6}\r\n\t\t\t\touterRadius={outerRadius + 10}\r\n\t\t\t\tfill={fill}/>\r\n\r\n\t\t\t<path d={`M${sx},${sy}L${mx},${my}L${ex},${ey}`}\r\n\t\t\t      stroke={fill} fill=\"none\"/>\r\n\r\n\t\t\t<circle cx={ex}\r\n\t\t\t        cy={ey}\r\n\t\t\t        r={2}\r\n\t\t\t        fill={fill}\r\n\t\t\t        stroke=\"none\"/>\r\n\r\n\t\t\t<text x={ex + (cos >= 0 ? 1 : -1) * 12}\r\n\t\t\t      y={ey}\r\n\t\t\t      textAnchor={textAnchor}\r\n\t\t\t      fill=\"#333\">\r\n\t\t\t\t{`${millify(value)}`}\r\n\t\t\t</text>\r\n\r\n\t\t\t<text x={ex + (cos >= 0 ? 1 : -1) * 12}\r\n\t\t\t      y={ey} dy={18}\r\n\t\t\t      textAnchor={textAnchor}\r\n\t\t\t      fill=\"#999\">\r\n\t\t\t\t{`${(percent * 100).toFixed(2)}%`}\r\n\t\t\t</text>\r\n\t\t</g>\r\n\t);\r\n};","import React, {Component} from 'react';\r\nimport {map, sumBy} from \"lodash\";\r\nimport 'echarts/lib/chart/pie';\r\nimport Auth from \"support/Auth\";\r\nimport {pipe} from \"support/utils/common\";\r\nimport {connect} from \"react-redux\";\r\nimport {FormattedMessage, injectIntl} from \"react-intl\";\r\nimport Widget from \"components/Widget\";\r\nimport {Icon, Result} from \"antd\";\r\nimport context from \"context\";\r\nimport activeShape from './activeShape';\r\nimport {Pie, PieChart, ResponsiveContainer} from \"recharts\";\r\n\r\nconst {colorPalettes} = context.settings;\r\n\r\nclass Distribution extends Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\r\n\t\tthis.state = {\r\n\t\t\tactiveIndex : 0,\r\n\t\t}\r\n\t}\r\n\r\n\tonPieEnter = (data, index) => {\r\n\t\tthis.setState({\r\n\t\t\tactiveIndex : index,\r\n\t\t});\r\n\t};\r\n\r\n\tgetData() {\r\n\t\tconst {accounts} = this.props;\r\n\r\n\t\treturn map(accounts, (o) => {\r\n\t\t\treturn {\r\n\t\t\t\tvalue : o.available_price,\r\n\t\t\t\tname  : o.wallet.coin.name\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\trender() {\r\n\t\tconst {activeIndex} = this.state;\r\n\t\tconst data = this.getData();\r\n\r\n\t\tconst total = sumBy(data, 'value');\r\n\r\n\t\treturn (\r\n\t\t\t<Widget\r\n\t\t\t\ttitle={\r\n\t\t\t\t\t<FormattedMessage\r\n\t\t\t\t\t\tdefaultMessage=\"Wallet Distribution\"\r\n\t\t\t\t\t\tid=\"wallet.distribution\"/>\r\n\t\t\t\t}>\r\n\t\t\t\t<div className=\"text-center text-lg-left\">\r\n\t\t\t\t\t{total > 0 ? (\r\n\t\t\t\t\t\t<ResponsiveContainer height={200}>\r\n\t\t\t\t\t\t\t<PieChart>\r\n\t\t\t\t\t\t\t\t<Pie dataKey=\"value\"\r\n\t\t\t\t\t\t\t\t     fill={colorPalettes['@primary-color']}\r\n\t\t\t\t\t\t\t\t     activeIndex={activeIndex}\r\n\t\t\t\t\t\t\t\t     activeShape={activeShape}\r\n\t\t\t\t\t\t\t\t     innerRadius=\"50%\"\r\n\t\t\t\t\t\t\t\t     outerRadius=\"70%\"\r\n\t\t\t\t\t\t\t\t     onMouseEnter={this.onPieEnter}\r\n\t\t\t\t\t\t\t\t     data={data}/>\r\n\t\t\t\t\t\t\t</PieChart>\r\n\t\t\t\t\t\t</ResponsiveContainer>\r\n\t\t\t\t\t) : (\r\n\t\t\t\t\t\t<Result\r\n\t\t\t\t\t\t\ticon={\r\n\t\t\t\t\t\t\t\t<Icon type=\"frown\"\r\n\t\t\t\t\t\t\t\t      twoToneColor={colorPalettes['@primary-color']}\r\n\t\t\t\t\t\t\t\t      theme=\"twoTone\"/>\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\textra={\r\n\t\t\t\t\t\t\t\t<span className=\"text-muted\">\r\n\t\t\t\t\t\t\t\t\t<FormattedMessage\r\n\t\t\t\t\t\t\t\t\t\tdefaultMessage=\"You have no wallet balance.\"\r\n\t\t\t\t\t\t\t\t\t\tid=\"wallet.no_wallet_balance\"/>\r\n\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tstatus=\"info\"/>\r\n\t\t\t\t\t)}\r\n\t\t\t\t</div>\r\n\t\t\t</Widget>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nconst mapStateToProps = ({\r\n\twallet : {accounts},\r\n\tauth\r\n}) => ({\r\n\taccounts,\r\n\tauth : new Auth(auth)\r\n});\r\nexport default pipe(\r\n\tinjectIntl,\r\n\tconnect(\r\n\t\tmapStateToProps\r\n\t)\r\n)(Distribution);","import React from 'react';\r\nimport {FormattedMessage} from \"react-intl\";\r\nimport {Card} from \"antd\";\r\n\r\nconst CoinPrice = ({styleName, coin, price, priceColor}) => {\r\n\treturn (\r\n\t\t<Card className={`${styleName} cp-card-price d-inline-block`}>\r\n\t\t\t<h5 className=\"text-muted\">\r\n\t\t\t\t<FormattedMessage\r\n\t\t\t\t\tdefaultMessage=\"{coin} Price\"\r\n\t\t\t\t\tid=\"wallet.coin_price\"\r\n\t\t\t\t\tvalues={{coin: coin}}/>\r\n\t\t\t</h5>\r\n\t\t\t<div className=\"cp-fs-2x font-weight-medium\">\r\n\t\t\t\t<span style={{color : priceColor}}>\r\n\t\t\t\t\t{price}\r\n\t\t\t\t</span>\r\n\t\t\t</div>\r\n\t\t</Card>\r\n\t);\r\n};\r\n\r\nexport default CoinPrice;","import React, {Component} from 'react';\r\nimport CoinPrice from \"./components/CoinPrice\";\r\nimport Auth from \"support/Auth\";\r\nimport {pipe} from \"support/utils/common\";\r\nimport {connect} from \"react-redux\";\r\n\r\nclass PriceList extends Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\r\n\t\tthis.state = {\r\n\t\t\tscroll : true\r\n\t\t}\r\n\t}\r\n\r\n\tonMouseOver = () => {\r\n\t\tthis.setState({scroll : false})\r\n\t};\r\n\r\n\tonMouseOut = () => {\r\n\t\tthis.setState({scroll : true})\r\n\t};\r\n\r\n\trender() {\r\n\t\tconst {accounts} = this.props;\r\n\r\n\t\treturn (\r\n\t\t\t<div className=\"marquee my-3\"\r\n\t\t\t     onMouseOver={this.onMouseOver}\r\n\t\t\t     onMouseOut={this.onMouseOut}>\r\n\t\t\t\t<div className={`${this.state.scroll ? '' : 'pause'}`}>\r\n\t\t\t\t\t{accounts.map((account) => (\r\n\t\t\t\t\t\t\t<CoinPrice coin={account.wallet.coin.name}\r\n\t\t\t\t\t\t\t           key={account.id}\r\n\t\t\t\t\t\t\t           styleName=\"mx-1\"\r\n\t\t\t\t\t\t\t           price={account.formatted_price}\r\n\t\t\t\t\t\t\t           priceColor={account.wallet.coin.color}/>\r\n\t\t\t\t\t\t)\r\n\t\t\t\t\t)}\r\n\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nconst mapStateToProps = ({\r\n\twallet : {accounts},\r\n\tauth\r\n}) => ({\r\n\taccounts,\r\n\tauth : new Auth(auth)\r\n});\r\nexport default pipe(\r\n\tconnect(\r\n\t\tmapStateToProps\r\n\t)\r\n)(PriceList);","import React, {Component} from \"react\";\r\nimport {Button, Col, Spin} from \"antd\";\r\nimport Distribution from \"./components/Distribution\";\r\nimport Balance from \"./components/Balance\";\r\nimport {FormattedMessage} from \"react-intl\";\r\nimport PriceList from \"./components/PriceList\";\r\nimport {pipe} from \"support/utils/common\";\r\nimport {connect} from \"react-redux\";\r\n\r\nimport {hideNewAccountForm, showNewAccountForm} from \"redux/actions/Wallet\"\r\nimport {generatePath, Link} from \"react-router-dom\";\r\nimport menuItemLinks from \"containers/utils/menuItemLinks\";\r\n\r\n\r\nclass Portfolio extends Component {\r\n\tshowNewAccountForm = () => {\r\n\t\tthis.props.showNewAccountForm()\r\n\t};\r\n\r\n\trender() {\r\n\t\tconst {accountsLoading} = this.props;\r\n\r\n\t\tconst sellCoinPath = generatePath(menuItemLinks['marketplace.sell_coin'].path);\r\n\t\tconst buyCoinPath = generatePath(menuItemLinks['marketplace.buy_coin'].path);\r\n\r\n\t\treturn (\r\n\t\t\t<React.Fragment>\r\n\t\t\t\t<Col sm={12} xs={24}>\r\n\t\t\t\t\t<h2 className=\"h4 text-sm-left text-center\">\r\n\t\t\t\t\t\t<FormattedMessage\r\n\t\t\t\t\t\t\tdefaultMessage=\"Your Wallet Balance\"\r\n\t\t\t\t\t\t\tid=\"wallet.your_balance\"/>\r\n\t\t\t\t\t</h2>\r\n\r\n\t\t\t\t\t<div className=\"text-center\">\r\n\t\t\t\t\t\t<Balance/>\r\n\r\n\t\t\t\t\t\t<div className=\"text-sm-left mb-3 mt-2 mb-md-2\">\r\n\t\t\t\t\t\t\t<Link to={buyCoinPath}>\r\n\t\t\t\t\t\t\t\t<Button className=\"mr-2 cp-btn-success\"\r\n\t\t\t\t\t\t\t\t        type=\"default\">\r\n\t\t\t\t\t\t\t\t\t<i className=\"la la-sign-in-alt\"/>\r\n\t\t\t\t\t\t\t\t\t<span className=\"ml-1\">\r\n\t\t\t\t\t\t\t\t\t\t<FormattedMessage\r\n\t\t\t\t\t\t\t\t\t\t\tdefaultMessage=\"Buy\"\r\n\t\t\t\t\t\t\t\t\t\t\tid=\"common.buy\"/>\r\n\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t</Link>\r\n\r\n\t\t\t\t\t\t\t<Link to={sellCoinPath}>\r\n\t\t\t\t\t\t\t\t<Button className=\"mr-2\" type=\"danger\">\r\n\t\t\t\t\t\t\t\t\t<i className=\"la la-sign-out-alt\"/>\r\n\t\t\t\t\t\t\t\t\t<span className=\"ml-1\">\r\n\t\t\t\t\t\t\t\t\t\t<FormattedMessage\r\n\t\t\t\t\t\t\t\t\t\t\tdefaultMessage=\"Sell\"\r\n\t\t\t\t\t\t\t\t\t\t\tid=\"common.sell\"/>\r\n\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t</Link>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t<PriceList/>\r\n\r\n\t\t\t\t\t<p className=\"cp-text-primary cp-pointer\">\r\n\t\t\t\t\t\t<Button className=\"mr-2\" type=\"default\"\r\n\t\t\t\t\t\t        onClick={this.showNewAccountForm}>\r\n\t\t\t\t\t\t\t<i className=\"la la-plus-circle\"/>\r\n\t\t\t\t\t\t\t<span className=\"ml-1\">\r\n\t\t\t\t\t\t\t\t<FormattedMessage\r\n\t\t\t\t\t\t\t\t\tdefaultMessage=\"Add Account\"\r\n\t\t\t\t\t\t\t\t\tid=\"wallet.add_account\"/>\r\n\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t</p>\r\n\t\t\t\t</Col>\r\n\r\n\r\n\t\t\t\t<Col sm={12} xs={24}>\r\n\t\t\t\t\t<Spin spinning={accountsLoading}>\r\n\t\t\t\t\t\t<Distribution/>\r\n\t\t\t\t\t</Spin>\r\n\t\t\t\t</Col>\r\n\t\t\t</React.Fragment>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nconst mapStateToProps = ({\r\n\twallet : {\r\n\t\taccountsLoading,\r\n\t\tshowNewAccountModal,\r\n\t\taccounts\r\n\t}\r\n}) => ({\r\n\taccountsLoading,\r\n\tshowNewAccountModal,\r\n\taccounts\r\n});\r\n\r\nexport default pipe(\r\n\tconnect(\r\n\t\tmapStateToProps,\r\n\t\t{\r\n\t\t\tshowNewAccountForm,\r\n\t\t\thideNewAccountForm\r\n\t\t}\r\n\t)\r\n)(Portfolio);\r\n\r\n","import React, {Component} from 'react';\r\nimport {Tag} from \"antd\";\r\nimport Widget from \"components/Widget\";\r\nimport {FormattedMessage, injectIntl} from \"react-intl\";\r\nimport AsyncTable from \"components/AsyncTable\";\r\nimport {route} from \"support/Services/Api\";\r\nimport Auth from \"support/Auth\";\r\nimport {formatUTCDate, pipe, sortDate} from \"support/utils/common\";\r\nimport {connect} from \"react-redux\";\r\nimport {mapValues, values} from \"lodash\";\r\n\r\nclass RecordsTable extends Component {\r\n\tcolumns = () => {\r\n\t\tconst {accounts} = this.props;\r\n\r\n\t\treturn [\r\n\t\t\t{\r\n\t\t\t\ttitle     : 'Amount',\r\n\t\t\t\tdataIndex : 'formatted_value_price',\r\n\t\t\t\trender    : (text, record) => (\r\n\t\t\t\t\t<span>\r\n\t\t\t\t\t\t{record.type === 'receive' ?\r\n\t\t\t\t\t\t\t<span className=\"cp-text-success\">\r\n\t\t\t\t\t\t\t\t{text}\r\n\t\t\t\t\t\t\t</span> :\r\n\t\t\t\t\t\t\t<span className=\"cp-text-danger\">\r\n\t\t\t\t\t\t\t\t{text}\r\n\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t</span>\r\n\t\t\t\t)\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\ttitle     : 'Date',\r\n\t\t\t\tdataIndex : 'created_at',\r\n\t\t\t\tsorter    : (a, b) => sortDate(a.created_at, b.created_at),\r\n\t\t\t\trender    : text => (\r\n\t\t\t\t\t<div style={{whiteSpace : 'nowrap'}}>\r\n\t\t\t\t\t\t{formatUTCDate(text)}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t),\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\ttitle     : 'Status',\r\n\t\t\t\tdataIndex : 'confirmed',\r\n\t\t\t\trender    : (text) => {\r\n\t\t\t\t\tconst isConfirmed = text === \"true\" ||\r\n\t\t\t\t\t\t(typeof text === \"boolean\" && text);\r\n\r\n\t\t\t\t\treturn (\r\n\t\t\t\t\t\t<span>\r\n\t\t\t\t\t\t\t{isConfirmed ?\r\n\t\t\t\t\t\t\t\t<Tag color=\"green\">\r\n\t\t\t\t\t\t\t\t\t<FormattedMessage\r\n\t\t\t\t\t\t\t\t\t\tdefaultMessage=\"confirmed\"\r\n\t\t\t\t\t\t\t\t\t\tid=\"wallet.transaction_confirmed\"/>\r\n\t\t\t\t\t\t\t\t</Tag> :\r\n\t\t\t\t\t\t\t\t<Tag color=\"red\">\r\n\t\t\t\t\t\t\t\t\t<FormattedMessage\r\n\t\t\t\t\t\t\t\t\t\tdefaultMessage=\"unconfirmed\"\r\n\t\t\t\t\t\t\t\t\t\tid=\"wallet.transaction_unconfirmed\"/>\r\n\t\t\t\t\t\t\t\t</Tag>\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t</span>\r\n\t\t\t\t\t)\r\n\t\t\t\t},\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\ttitle     : 'Value',\r\n\t\t\t\tdataIndex : 'value',\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\ttitle     : 'Hash',\r\n\t\t\t\tdataIndex : 'hash',\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\ttitle     : 'Coin',\r\n\t\t\t\tdataIndex : 'coin',\r\n\t\t\t\tfixed     : 'right',\r\n\t\t\t\tonFilter  : (value, record) => {\r\n\t\t\t\t\treturn record.coin.includes(value)\r\n\t\t\t\t},\r\n\t\t\t\tfilters   : values(mapValues(accounts, (o) => {\r\n\t\t\t\t\treturn {\r\n\t\t\t\t\t\ttext  : o.wallet.coin.name,\r\n\t\t\t\t\t\tvalue : o.wallet.coin.name\r\n\t\t\t\t\t}\r\n\t\t\t\t})),\r\n\t\t\t},\r\n\t\t];\r\n\t};\r\n\r\n\trender() {\r\n\t\tconst endpoint = route(\"user.transfer-records-table\");\r\n\r\n\t\treturn (\r\n\t\t\t<Widget styleName=\"cp-card-table\"\r\n\t\t\t        title={\r\n\t\t\t\t        <FormattedMessage\r\n\t\t\t\t\t        defaultMessage=\"Transfer Records\"\r\n\t\t\t\t\t        id=\"wallet.transfer_records\"/>\r\n\t\t\t        }>\r\n\t\t\t\t<AsyncTable\r\n\t\t\t\t\troute={endpoint.url()}\r\n\t\t\t\t\tcolumns={this.columns()}\r\n\t\t\t\t\tclassName=\"mt-1\"\r\n\t\t\t\t\tscroll={{x : true, y : false}}\r\n\t\t\t\t\tsize=\"middle\"/>\r\n\t\t\t</Widget>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nconst mapStateToProps = ({\r\n\twallet : {accounts},\r\n\tauth\r\n}) => ({\r\n\taccounts,\r\n\tauth : new Auth(auth)\r\n});\r\n\r\nexport default pipe(\r\n\tinjectIntl,\r\n\tconnect(\r\n\t\tmapStateToProps\r\n\t)\r\n)(RecordsTable);","import React, {Component} from 'react';\r\nimport {Col, Input, Row} from \"antd\";\r\nimport {round} from \"lodash\";\r\nimport PropTypes from 'prop-types';\r\n\r\nclass AmountInput extends Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\r\n\t\tthis.state = {\r\n\t\t\tvalue : props.value,\r\n\t\t\tscale : 'coin',\r\n\t\t}\r\n\t}\r\n\r\n\tconvert = (value, converter, precision) => {\r\n\t\tconst input = parseFloat(value);\r\n\t\tif (Number.isNaN(input)) return \"\";\r\n\r\n\t\tconst output = converter(input);\r\n\r\n\t\tconst rounded = round(output, precision);\r\n\t\treturn rounded.toString();\r\n\t};\r\n\r\n\thandlePriceChange = (e) => {\r\n\t\tthis.setState({\r\n\t\t\tvalue : e.target.value, scale : 'price'\r\n\t\t}, () => {\r\n\t\t\tthis.triggerControlChange();\r\n\t\t});\r\n\t};\r\n\r\n\thandleCoinChange = (e) => {\r\n\t\tthis.setState({\r\n\t\t\tvalue : e.target.value, scale : 'coin'\r\n\t\t}, () => {\r\n\t\t\tthis.triggerControlChange();\r\n\t\t});\r\n\t};\r\n\r\n\ttriggerControlChange() {\r\n\t\tconst {onChange, precision} = this.props;\r\n\t\tif (typeof onChange !== \"function\") return;\r\n\t\tconst {value, scale} = this.state;\r\n\r\n\t\tif (scale === 'price') {\r\n\t\t\tconst coin = this.convert(value, this.toCoin, precision);\r\n\t\t\tonChange(parseFloat(coin));\r\n\t\t} else if (scale === 'coin') {\r\n\t\t\tonChange(parseFloat(value));\r\n\t\t}\r\n\t};\r\n\r\n\ttoCoin = (price) => {\r\n\t\tconst {unitPrice} = this.props;\r\n\t\treturn price / unitPrice;\r\n\t};\r\n\r\n\ttoPrice = (coin) => {\r\n\t\tconst {unitPrice} = this.props;\r\n\t\treturn coin * unitPrice;\r\n\t};\r\n\r\n\trender() {\r\n\t\tconst {coinSymbol, currency, precision} = this.props;\r\n\t\tconst {value, scale} = this.state;\r\n\r\n\t\tconst price = scale === 'coin' ?\r\n\t\t\tthis.convert(value, this.toPrice, 2) : value;\r\n\r\n\t\tconst coin = scale === 'price' ?\r\n\t\t\tthis.convert(value, this.toCoin, precision) : value;\r\n\r\n\t\treturn (\r\n\t\t\t<div>\r\n\t\t\t\t<Input.Group>\r\n\t\t\t\t\t<Row gutter={8}>\r\n\t\t\t\t\t\t<Col xs={12} style={{marginBottom : '0'}}>\r\n\t\t\t\t\t\t\t<Input addonAfter={coinSymbol}\r\n\t\t\t\t\t\t\t       onChange={this.handleCoinChange}\r\n\t\t\t\t\t\t\t       value={coin}/>\r\n\t\t\t\t\t\t</Col>\r\n\r\n\t\t\t\t\t\t<Col xs={12} style={{marginBottom : '0'}}>\r\n\t\t\t\t\t\t\t<Input addonAfter={currency}\r\n\t\t\t\t\t\t\t       onChange={this.handlePriceChange}\r\n\t\t\t\t\t\t\t       value={price}/>\r\n\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t</Row>\r\n\t\t\t\t</Input.Group>\r\n\t\t\t</div>\r\n\r\n\t\t);\r\n\t}\r\n}\r\n\r\nAmountInput.protoType = {\r\n\tcoinSymbol : PropTypes.string.isRequired,\r\n\tcurrency   : PropTypes.string.isRequired,\r\n\tunitPrice  : PropTypes.number.isRequired,\r\n\tprecision  : PropTypes.number.isRequired\r\n};\r\n\r\nexport default AmountInput;","import React, {Component} from 'react';\r\nimport {hideWithdrawModal} from \"redux/actions/Wallet\";\r\nimport {pipe} from \"support/utils/common\";\r\nimport {Alert, Col, Divider, Form, Icon, Input, Modal, Result, Row} from \"antd\";\r\nimport {defineMessages, FormattedMessage} from \"react-intl\";\r\nimport {connect} from \"react-redux\";\r\nimport ApiService from \"support/Services/Api\";\r\nimport formHelper from \"support/Helpers/Form\";\r\nimport {find, isEmpty, round} from \"lodash\";\r\nimport AmountInput from \"./components/AmountInput\";\r\nimport {handleFormError, handleFormSuccess} from \"support/utils/promise\";\r\nimport Auth from \"support/Auth\";\r\nimport context from \"context\";\r\n\r\nconst {colorPalettes} = context.settings;\r\n\r\nconst messages = defineMessages({\r\n\tsuccessful : {\r\n\t\tdefaultMessage : \"Transaction was sent successfully!\",\r\n\t\tid             : \"wallet.transaction_sent\"\r\n\t},\r\n});\r\n\r\nclass WithdrawModal extends Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\r\n\t\tthis.state = {\r\n\t\t\tformattedFee   : null,\r\n\t\t\tfee            : 0,\r\n\t\t\tfeeLoading     : false,\r\n\t\t\tconfirmLoading : false,\r\n\t\t};\r\n\r\n\t\tthis.api = new ApiService()\r\n\t}\r\n\r\n\tcomponentWillUnmount() {\r\n\t\tthis.api.cancel()\r\n\t}\r\n\r\n\tgetAccount() {\r\n\t\tconst {accounts, accountId} = this.props;\r\n\t\treturn find(accounts, {id : accountId})\r\n\t}\r\n\r\n\tcalcTotal() {\r\n\t\tconst account = this.getAccount();\r\n\t\tif (!account) return null;\r\n\r\n\t\tconst {getFieldValue} = this.props.form;\r\n\t\tconst {fee} = this.state;\r\n\t\tconst precision = account.wallet.coin.precision;\r\n\t\tconst amount = getFieldValue('amount');\r\n\t\tif (typeof amount !== \"number\" || !amount) {\r\n\t\t\treturn null\r\n\t\t}\r\n\r\n\t\tconst total = !this.shouldChargeFee() ?\r\n\t\t\tamount : amount + fee;\r\n\r\n\t\treturn round(total, precision);\r\n\t}\r\n\r\n\tshouldChargeFee() {\r\n\t\tconst {getFieldValue} = this.props.form;\r\n\t\tconst address = getFieldValue('address');\r\n\t\treturn !/\\S+@\\S+\\.\\S+/.test(address);\r\n\t}\r\n\r\n\tgetTransactionFee = () => {\r\n\t\tconst account = this.getAccount();\r\n\t\tif (!account) return false;\r\n\r\n\t\tconst {axios, route} = this.api;\r\n\t\tconst {form} = this.props;\r\n\t\tconst {getFieldsValue} = form;\r\n\r\n\t\tconst endpoint = route('user.wallet-account.calc-fee', {\r\n\t\t\twalletAccount : account.id\r\n\t\t});\r\n\r\n\t\tconst values = getFieldsValue(['amount']);\r\n\r\n\t\taxios.post(endpoint.url(), values)\r\n\t\t\t.then(response => handleFormSuccess(response, form, (data) => {\r\n\t\t\t\tthis.setState({\r\n\t\t\t\t\tfeeLoading   : false,\r\n\t\t\t\t\tfee          : data.fee,\r\n\t\t\t\t\tformattedFee : data.formatted_fee\r\n\t\t\t\t});\r\n\t\t\t}))\r\n\t\t\t.catch(error => handleFormError(error, form, values, () => {\r\n\t\t\t\tthis.setState({feeLoading : false});\r\n\t\t\t}));\r\n\r\n\t\tthis.setState({feeLoading : true});\r\n\t};\r\n\r\n\tcanSubmit() {\r\n\t\tconst total = this.calcTotal();\r\n\t\tconst account = this.getAccount();\r\n\t\tif (!account) return false;\r\n\r\n\t\treturn typeof total === \"number\" &&\r\n\t\t\ttotal && total > 0 &&\r\n\t\t\ttotal <= account.available;\r\n\t}\r\n\r\n\thideModal = () => {\r\n\t\tthis.props.hideWithdrawModal()\r\n\t};\r\n\r\n\thandleSubmit = (e) => {\r\n\t\tconst account = this.getAccount();\r\n\t\tif (!account) return false;\r\n\r\n\t\tconst {form, intl} = this.props;\r\n\t\tconst {axios, route} = this.api;\r\n\t\tconst endpoint = route('user.wallet-account.send', {\r\n\t\t\twalletAccount : account.id\r\n\t\t});\r\n\r\n\t\tform.validateFields((errors, values) => {\r\n\t\t\tif (isEmpty(errors)) {\r\n\t\t\t\taxios.post(endpoint.url(), values)\r\n\t\t\t\t\t.then(response => handleFormSuccess(response, form, () => {\r\n\t\t\t\t\t\tthis.setState({confirmLoading : false});\r\n\t\t\t\t\t\tthis.hideModal();\r\n\t\t\t\t\t\tthis.triggerSuccess();\r\n\t\t\t\t\t}, intl.formatMessage(messages.successful)))\r\n\t\t\t\t\t.catch(error => handleFormError(error, form, values, () => {\r\n\t\t\t\t\t\tthis.setState({confirmLoading : false});\r\n\t\t\t\t\t}));\r\n\r\n\t\t\t\tthis.setState({confirmLoading : true});\r\n\t\t\t}\r\n\t\t});\r\n\t};\r\n\r\n\ttriggerSuccess() {\r\n\t\tconst {onSuccess} = this.props;\r\n\t\tif (typeof onSuccess === \"function\") {\r\n\t\t\treturn onSuccess();\r\n\t\t}\r\n\t}\r\n\r\n\trender() {\r\n\t\tconst {visible, form, auth} = this.props;\r\n\t\tconst {getFieldDecorator} = form;\r\n\t\tconst {confirmLoading, fee, formattedFee, feeLoading} = this.state;\r\n\r\n\t\tconst account = this.getAccount();\r\n\t\tconst total = this.calcTotal();\r\n\r\n\t\tconst twoFactorSetting = auth.twoFactorSetting();\r\n\r\n\t\treturn (\r\n\t\t\t<div>\r\n\t\t\t\t<Modal visible={visible}\r\n\t\t\t\t       confirmLoading={confirmLoading}\r\n\t\t\t\t       onCancel={this.hideModal}\r\n\t\t\t\t       okButtonProps={{disabled : !this.canSubmit()}}\r\n\t\t\t\t       onOk={this.handleSubmit}\r\n\t\t\t\t       destroyOnClose={true}\r\n\t\t\t\t       okText={\r\n\t\t\t\t\t       <span>\r\n\t\t\t\t\t\t       <FormattedMessage\r\n\t\t\t\t\t\t\t       defaultMessage=\"Confirm\"\r\n\t\t\t\t\t\t\t       id=\"common.confirm\"/>\r\n\t\t\t\t\t       </span>\r\n\t\t\t\t       }\r\n\t\t\t\t       title={\r\n\t\t\t\t\t       <FormattedMessage\r\n\t\t\t\t\t\t       defaultMessage=\"Withdraw {coin}\"\r\n\t\t\t\t\t\t       id=\"wallet.withdraw_modal_title\"\r\n\t\t\t\t\t\t       values={{\r\n\t\t\t\t\t\t\t       coin : <b>{account ? account.wallet.coin.name : \"Coin\"}</b>\r\n\t\t\t\t\t\t       }}/>\r\n\t\t\t\t       }>\r\n\t\t\t\t\t{account ?\r\n\t\t\t\t\t\t<React.Fragment>\r\n\t\t\t\t\t\t\t<Alert showIcon\r\n\t\t\t\t\t\t\t       message={\r\n\t\t\t\t\t\t\t\t       <FormattedMessage\r\n\t\t\t\t\t\t\t\t\t       defaultMessage={\r\n\t\t\t\t\t\t\t\t\t\t       \"Please make sure you check the withdraw address information carefully \" +\r\n\t\t\t\t\t\t\t\t\t\t       \"before the withdraw operation. You can use email address for internal \" +\r\n\t\t\t\t\t\t\t\t\t\t       \"transfer to avoid transaction fee.\"\r\n\t\t\t\t\t\t\t\t\t       }\r\n\t\t\t\t\t\t\t\t\t       id=\"wallet.withdrawal_info\"/>\r\n\t\t\t\t\t\t\t       }\r\n\t\t\t\t\t\t\t       type=\"info\"/>\r\n\t\t\t\t\t\t\t<Form className=\"mt-3\"\r\n\t\t\t\t\t\t\t      wrapperCol={{xs : 24, sm : 16}}\r\n\t\t\t\t\t\t\t      labelCol={{xs : 24, sm : 8}}>\r\n\t\t\t\t\t\t\t\t<Form.Item labelAlign=\"left\"\r\n\t\t\t\t\t\t\t\t           label={\r\n\t\t\t\t\t\t\t\t\t           <FormattedMessage\r\n\t\t\t\t\t\t\t\t\t\t           defaultMessage=\"Address\"\r\n\t\t\t\t\t\t\t\t\t\t           id=\"common.address_or_email\"/>\r\n\t\t\t\t\t\t\t\t           }>\r\n\t\t\t\t\t\t\t\t\t{getFieldDecorator('address', {\r\n\t\t\t\t\t\t\t\t\t\trules : [{required : true}],\r\n\t\t\t\t\t\t\t\t\t})(<Input/>)}\r\n\t\t\t\t\t\t\t\t</Form.Item>\r\n\r\n\t\t\t\t\t\t\t\t<Form.Item labelAlign=\"left\"\r\n\t\t\t\t\t\t\t\t           label={\r\n\t\t\t\t\t\t\t\t\t           <FormattedMessage\r\n\t\t\t\t\t\t\t\t\t\t           defaultMessage=\"Amount\"\r\n\t\t\t\t\t\t\t\t\t\t           id=\"common.amount\"/>\r\n\t\t\t\t\t\t\t\t           }>\r\n\t\t\t\t\t\t\t\t\t{getFieldDecorator('amount', {\r\n\t\t\t\t\t\t\t\t\t\trules : [\r\n\t\t\t\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t\t\t\ttype     : 'number',\r\n\t\t\t\t\t\t\t\t\t\t\t\trequired : true,\r\n\t\t\t\t\t\t\t\t\t\t\t\tmin      : account.min_transferable,\r\n\t\t\t\t\t\t\t\t\t\t\t\tmax      : account.max_transferable\r\n\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t],\r\n\t\t\t\t\t\t\t\t\t})(\r\n\t\t\t\t\t\t\t\t\t\t<AmountInput\r\n\t\t\t\t\t\t\t\t\t\t\tcurrency={account.user.currency}\r\n\t\t\t\t\t\t\t\t\t\t\tcoinSymbol={account.wallet.coin.symbol}\r\n\t\t\t\t\t\t\t\t\t\t\tprecision={account.wallet.coin.precision}\r\n\t\t\t\t\t\t\t\t\t\t\tunitPrice={account.price}/>\r\n\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t</Form.Item>\r\n\r\n\t\t\t\t\t\t\t\t{this.shouldChargeFee() && (\r\n\t\t\t\t\t\t\t\t\t<Row className=\"d-flex align-items-center mb-2\"\r\n\t\t\t\t\t\t\t\t\t     gutter={8}>\r\n\t\t\t\t\t\t\t\t\t\t<Col className=\"px-3\"\r\n\t\t\t\t\t\t\t\t\t\t     span={8}>\r\n\t\t\t\t\t\t\t\t\t\t\t<strong>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<FormattedMessage\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tdefaultMessage=\"Fee\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tid=\"wallet.fee\"/>\r\n\t\t\t\t\t\t\t\t\t\t\t</strong>\r\n\t\t\t\t\t\t\t\t\t\t</Col>\r\n\r\n\t\t\t\t\t\t\t\t\t\t<Col span={16}>\r\n\t\t\t\t\t\t\t\t\t\t\t{fee > 0 && (\r\n\t\t\t\t\t\t\t\t\t\t\t\t<React.Fragment>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<span className=\"mr-1\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{fee}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<span className=\"mr-1\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t({formattedFee})\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</React.Fragment>\r\n\t\t\t\t\t\t\t\t\t\t\t)}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t<Icon spin={feeLoading}\r\n\t\t\t\t\t\t\t\t\t\t\t      onClick={this.getTransactionFee}\r\n\t\t\t\t\t\t\t\t\t\t\t      type=\"sync\"/>\r\n\t\t\t\t\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t\t\t\t</Row>\r\n\t\t\t\t\t\t\t\t)}\r\n\r\n\t\t\t\t\t\t\t\t{total && (\r\n\t\t\t\t\t\t\t\t\t<Row className=\"d-flex align-items-center mb-2\"\r\n\t\t\t\t\t\t\t\t\t     gutter={8}>\r\n\t\t\t\t\t\t\t\t\t\t<Col className=\"px-3\"\r\n\t\t\t\t\t\t\t\t\t\t     span={8}>\r\n\t\t\t\t\t\t\t\t\t\t\t<strong>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<FormattedMessage\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tdefaultMessage=\"Total\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tid=\"common.total\"/>\r\n\t\t\t\t\t\t\t\t\t\t\t</strong>\r\n\t\t\t\t\t\t\t\t\t\t</Col>\r\n\r\n\t\t\t\t\t\t\t\t\t\t<Col span={16}>\r\n\t\t\t\t\t\t\t\t\t\t\t{total}\r\n\t\t\t\t\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t\t\t\t</Row>\r\n\t\t\t\t\t\t\t\t)}\r\n\r\n\t\t\t\t\t\t\t\t<Row className=\"d-flex align-items-center mb-2\"\r\n\t\t\t\t\t\t\t\t     gutter={8}>\r\n\t\t\t\t\t\t\t\t\t<Col className=\"px-3\"\r\n\t\t\t\t\t\t\t\t\t     span={8}>\r\n\t\t\t\t\t\t\t\t\t\t<strong>\r\n\t\t\t\t\t\t\t\t\t\t\t<FormattedMessage\r\n\t\t\t\t\t\t\t\t\t\t\t\tdefaultMessage=\"Available\"\r\n\t\t\t\t\t\t\t\t\t\t\t\tid=\"common.available\"/>\r\n\t\t\t\t\t\t\t\t\t\t</strong>\r\n\t\t\t\t\t\t\t\t\t</Col>\r\n\r\n\t\t\t\t\t\t\t\t\t<Col span={16}>\r\n\t\t\t\t\t\t\t\t\t\t<span className={`${this.canSubmit() && 'cp-text-success'}`}>\r\n\t\t\t\t\t\t\t\t\t\t\t<span className=\"mr-1\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t{account.available}\r\n\t\t\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t\t\t\t<span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t({account.formatted_available_price})\r\n\t\t\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t\t\t</Row>\r\n\r\n\t\t\t\t\t\t\t\t<Divider>\r\n\t\t\t\t\t\t\t\t\t<FormattedMessage\r\n\t\t\t\t\t\t\t\t\t\tdefaultMessage=\"Verify Identity\"\r\n\t\t\t\t\t\t\t\t\t\tid=\"wallet.verify_identity\"/>\r\n\t\t\t\t\t\t\t\t</Divider>\r\n\r\n\t\t\t\t\t\t\t\t{twoFactorSetting.outgoingTransfer() ? (\r\n\t\t\t\t\t\t\t\t\t<Form.Item labelAlign=\"left\"\r\n\t\t\t\t\t\t\t\t\t           label={\r\n\t\t\t\t\t\t\t\t\t\t           <FormattedMessage\r\n\t\t\t\t\t\t\t\t\t\t\t           defaultMessage=\"Token\"\r\n\t\t\t\t\t\t\t\t\t\t\t           id=\"common.token\"/>\r\n\t\t\t\t\t\t\t\t\t           }>\r\n\t\t\t\t\t\t\t\t\t\t{getFieldDecorator('token', {\r\n\t\t\t\t\t\t\t\t\t\t\trules : [{required : true}],\r\n\t\t\t\t\t\t\t\t\t\t})(<Input/>)}\r\n\t\t\t\t\t\t\t\t\t</Form.Item>\r\n\t\t\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t\t\t<React.Fragment>\r\n\t\t\t\t\t\t\t\t\t\t<Alert showIcon\r\n\t\t\t\t\t\t\t\t\t\t       className=\"mb-3\"\r\n\t\t\t\t\t\t\t\t\t\t       message={\r\n\t\t\t\t\t\t\t\t\t\t\t       <FormattedMessage\r\n\t\t\t\t\t\t\t\t\t\t\t\t       defaultMessage={\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t       \"You should setup two factor authentication to add an extra layer of security.\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t       }\r\n\t\t\t\t\t\t\t\t\t\t\t\t       id=\"wallet.validate_identity\"/>\r\n\t\t\t\t\t\t\t\t\t\t       }\r\n\t\t\t\t\t\t\t\t\t\t       type=\"error\"/>\r\n\r\n\t\t\t\t\t\t\t\t\t\t<Form.Item labelAlign=\"left\"\r\n\t\t\t\t\t\t\t\t\t\t           label={\r\n\t\t\t\t\t\t\t\t\t\t\t           <FormattedMessage\r\n\t\t\t\t\t\t\t\t\t\t\t\t           defaultMessage=\"Password\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t           id=\"common.password\"/>\r\n\t\t\t\t\t\t\t\t\t\t           }>\r\n\t\t\t\t\t\t\t\t\t\t\t{getFieldDecorator('password', {\r\n\t\t\t\t\t\t\t\t\t\t\t\trules : [{required : true}],\r\n\t\t\t\t\t\t\t\t\t\t\t})(\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Input.Password prefix={<Icon type=\"lock\"/>}\r\n\t\t\t\t\t\t\t\t\t\t\t\t                autoComplete=\"off\"/>\r\n\t\t\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t\t\t</Form.Item>\r\n\t\t\t\t\t\t\t\t\t</React.Fragment>\r\n\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t</Form>\r\n\t\t\t\t\t\t</React.Fragment> :\r\n\t\t\t\t\t\t<Result\r\n\t\t\t\t\t\t\ticon={\r\n\t\t\t\t\t\t\t\t<Icon type=\"frown\"\r\n\t\t\t\t\t\t\t\t      twoToneColor={colorPalettes['@primary-color']}\r\n\t\t\t\t\t\t\t\t      theme=\"twoTone\"/>\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\textra={\r\n\t\t\t\t\t\t\t\t<span className=\"text-muted\">\r\n\t\t\t\t\t\t\t\t\t<FormattedMessage\r\n\t\t\t\t\t\t\t\t\t\tdefaultMessage=\"Account not found.\"\r\n\t\t\t\t\t\t\t\t\t\tid=\"wallet.account_not_found\"/>\r\n\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tstatus=\"info\"/>\r\n\t\t\t\t\t}\r\n\t\t\t\t</Modal>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\n\r\nconst mapStateToProps = ({\r\n\twallet : {\r\n\t\twithdrawAccountId,\r\n\t\tvisibleWithdrawModal,\r\n\t\taccounts,\r\n\t},\r\n\tauth\r\n}) => ({\r\n\taccountId : withdrawAccountId,\r\n\tvisible   : visibleWithdrawModal,\r\n\taccounts,\r\n\tauth      : new Auth(auth),\r\n});\r\n\r\nexport default pipe(\r\n\tconnect(\r\n\t\tmapStateToProps,\r\n\t\t{\r\n\t\t\thideWithdrawModal\r\n\t\t}\r\n\t),\r\n\tformHelper(),\r\n)(WithdrawModal);","import React, {Component} from 'react';\r\nimport Portfolio from \"./components/Portfolio\";\r\nimport {Col, Row} from \"antd\";\r\nimport {pipe} from \"support/utils/common\";\r\nimport {connect} from 'react-redux';\r\nimport PrivateBroadcast from \"support/Services/Broadcast/Private\";\r\nimport NewAccountModal from \"./components/NewAccountModal\";\r\nimport RecordsTable from \"./components/RecordsTable\";\r\nimport AccountsTable from \"./components/AccountsTable\";\r\nimport {fetchAccounts} from \"redux/actions/Wallet\";\r\nimport DepositModal from \"./components/DepositModal\";\r\nimport {fetchAuthUser} from \"redux/actions/Auth\"\r\nimport WithdrawModal from \"./components/WithdrawModal\";\r\nimport {fetchLocaleData} from \"redux/actions/Settings\";\r\nimport Auth from \"support/Auth\";\r\nimport {Helmet} from \"react-helmet\";\r\nimport {defineMessages, injectIntl} from \"react-intl\";\r\nimport context from \"context\";\r\n\r\nconst messages = defineMessages({\r\n\tpageTitle : {\r\n\t\tdefaultMessage : \"Wallets | {name}\",\r\n\t\tid             : \"meta.title.wallets\"\r\n\t},\r\n});\r\n\r\nclass Wallets extends Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.broadcast = new PrivateBroadcast();\r\n\t\tthis.state = {\r\n\t\t\trecordsTableKey : 'transfer-record'\r\n\t\t};\r\n\t}\r\n\r\n\tcomponentDidMount() {\r\n\t\tthis.bindBroadcastEvents();\r\n\t\tthis.fetchAccounts();\r\n\t}\r\n\r\n\tbindBroadcastEvents() {\r\n\t\tthis.resetBroadcastChannel();\r\n\t\tthis.broadcast.listen('TransferRecordSaved', this.transferRecordSavedListener);\r\n\t}\r\n\r\n\tresetBroadcastChannel() {\r\n\t\tconst {auth} = this.props;\r\n\t\tif (auth.check()) {\r\n\t\t\tthis.broadcast.setChannel('Auth.User.' + auth.user.id)\r\n\t\t} else {\r\n\t\t\tthis.broadcast.unbind();\r\n\t\t}\r\n\t}\r\n\r\n\tfetchAccounts = () => {\r\n\t\tthis.props.fetchAccounts();\r\n\t};\r\n\r\n\tcomponentDidUpdate(prevProps, prevState, snapshot) {\r\n\t\tconst user = this.props.auth.user;\r\n\t\tconst prevUser = prevProps.auth.user;\r\n\r\n\t\tif (prevUser.id !== user.id) {\r\n\t\t\tconsole.log('Wallet Updated');\r\n\t\t\tthis.resetBroadcastChannel();\r\n\t\t}\r\n\t}\r\n\r\n\ttransferRecordSavedListener = (e) => {\r\n\t\tif (e.transferRecord && e.transferRecord.confirmed) {\r\n\t\t\tthis.fetchAccounts();\r\n\t\t}\r\n\r\n\t\tthis.setState({\r\n\t\t\trecordsTableKey : Math.floor(Math.random() * 100)\r\n\t\t})\r\n\t};\r\n\r\n\tcomponentWillUnmount() {\r\n\t\tthis.broadcast.unbind();\r\n\t}\r\n\r\n\tgetPageTitle() {\r\n\t\tconst {intl} = this.props;\r\n\r\n\t\treturn intl.formatMessage(messages.pageTitle, {\r\n\t\t\tname : context.name\r\n\t\t})\r\n\t}\r\n\r\n\trender() {\r\n\t\tconst {recordsTableKey} = this.state;\r\n\r\n\t\treturn (\r\n\t\t\t<React.Fragment>\r\n\t\t\t\t<Helmet>\r\n\t\t\t\t\t<title>\r\n\t\t\t\t\t\t{this.getPageTitle()}\r\n\t\t\t\t\t</title>\r\n\t\t\t\t</Helmet>\r\n\r\n\t\t\t\t<WithdrawModal\r\n\t\t\t\t\tonSuccess={this.fetchAccounts}/>\r\n\r\n\t\t\t\t<NewAccountModal\r\n\t\t\t\t\tonSuccess={this.fetchAccounts}/>\r\n\r\n\t\t\t\t<DepositModal/>\r\n\r\n\t\t\t\t<Row gutter={8}>\r\n\t\t\t\t\t<Portfolio/>\r\n\t\t\t\t</Row>\r\n\r\n\t\t\t\t<Row gutter={8}>\r\n\t\t\t\t\t<Col lg={12} xs={24}>\r\n\t\t\t\t\t\t<AccountsTable/>\r\n\t\t\t\t\t</Col>\r\n\r\n\t\t\t\t\t<Col lg={12} xs={24}>\r\n\t\t\t\t\t\t<RecordsTable\r\n\t\t\t\t\t\t\tkey={recordsTableKey}/>\r\n\t\t\t\t\t</Col>\r\n\t\t\t\t</Row>\r\n\t\t\t</React.Fragment>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nconst mapStateToProps = ({\r\n\tauth\r\n}) => ({\r\n\tauth : new Auth(auth)\r\n});\r\n\r\nexport default pipe(\r\n\tconnect(\r\n\t\tmapStateToProps,\r\n\t\t{\r\n\t\t\tfetchAuthUser,\r\n\t\t\tfetchLocaleData,\r\n\t\t\tfetchAccounts\r\n\t\t}\r\n\t),\r\n\tinjectIntl\r\n)(Wallets);\r\n\r\nif (module.hot) {\r\n\tmodule.hot.accept()\r\n}"],"sourceRoot":""}