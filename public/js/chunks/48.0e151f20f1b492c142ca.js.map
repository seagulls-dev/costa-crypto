{"version":3,"sources":["webpack:///./resources/admin/components/Widget/index.js","webpack:///./resources/admin/routes/roles/components/EditRoleModal/index.js","webpack:///./resources/admin/routes/roles/components/NewRoleModal/index.js","webpack:///./resources/admin/routes/roles/index.js"],"names":["Widget","styleName","otherProps","messages","defineMessages","successful","EditRoleModal","form","intl","axios","route","endpoint","role","values","id","handleFormSuccess","confirmLoading","handleFormError","data","onSuccess","visible","onCancel","permissions","getFieldDecorator","xs","rules","required","permission","valuePropName","Component","mapStateToProps","coins","pipe","connect","formHelper","NewRoleModal","actionSuccessful","Roles","title","dataIndex","key","render","whiteSpace","newRole","editRole","roles","loading","handleSuccess","handleError","record","names","rolePermissions","o","fields","toggleEditRoleModal","x","y","toggleNewRoleModal","module"],"mappings":"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","file":"js/chunks/48.0e151f20f1b492c142ca.js","sourcesContent":["import React from \"react\";\r\nimport {Card} from \"antd\";\r\n\r\nconst Widget = ({styleName, ...otherProps}) => {\r\n\treturn (\r\n\t\t<Card bordered={false}\r\n\t\t      className={`cp-card-widget ${styleName}`}\r\n\t\t      {...otherProps}/>\r\n\t)\r\n};\r\n\r\nWidget.defaultProps = {\r\n\tstyleName : '',\r\n};\r\n\r\nexport default Widget;\r\n","import React, {Component} from 'react';\r\nimport {defineMessages, FormattedMessage} from \"react-intl\";\r\nimport ApiService from \"admin/support/Services/Api\";\r\nimport {pipe} from \"admin/support/utils/common\";\r\nimport formHelper from \"admin/support/Helpers/Form\";\r\nimport {Alert, Checkbox, Divider, Form, Input, InputNumber, Modal} from \"antd\";\r\nimport {isEmpty, startCase} from \"lodash\";\r\nimport {handleFormError, handleFormSuccess} from \"admin/support/utils/promise\";\r\nimport {connect} from \"react-redux\";\r\n\r\nconst messages = defineMessages({\r\n\tsuccessful : {\r\n\t\tdefaultMessage : \"Role updated successfully.\",\r\n\t\tid             : \"admin.role.updated_successfully\"\r\n\t},\r\n});\r\n\r\nclass EditRoleModal extends Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\r\n\t\tthis.api = new ApiService();\r\n\r\n\t\tthis.state = {\r\n\t\t\tconfirmLoading : false\r\n\t\t}\r\n\t}\r\n\r\n\thandleSubmit = () => {\r\n\t\tconst {form, intl} = this.props;\r\n\t\tconst {axios, route} = this.api;\r\n\r\n\t\tform.validateFields((errors, values) => {\r\n\t\t\tif (isEmpty(errors)) {\r\n\t\t\t\tconst endpoint = route('admin.roles.update', {\r\n\t\t\t\t\trole : values.id\r\n\t\t\t\t});\r\n\r\n\t\t\t\taxios.post(endpoint.url(), values)\r\n\t\t\t\t\t.then(response => handleFormSuccess(response, form, (data) => {\r\n\t\t\t\t\t\tthis.setState({confirmLoading : false});\r\n\t\t\t\t\t\tthis.triggerSuccess(data)\r\n\t\t\t\t\t}, intl.formatMessage(messages.successful)))\r\n\t\t\t\t\t.catch(error => handleFormError(error, form, values, () => {\r\n\t\t\t\t\t\tthis.setState({confirmLoading : false});\r\n\t\t\t\t\t}));\r\n\r\n\t\t\t\tthis.setState({confirmLoading : true});\r\n\t\t\t}\r\n\t\t});\r\n\t};\r\n\r\n\ttriggerSuccess(data) {\r\n\t\tconst {onSuccess} = this.props;\r\n\t\tif (typeof onSuccess === \"function\") {\r\n\t\t\treturn onSuccess(data);\r\n\t\t}\r\n\t}\r\n\r\n\tcomponentWillUnmount() {\r\n\t\tthis.api.cancel()\r\n\t}\r\n\r\n\trender() {\r\n\t\tconst {confirmLoading} = this.state;\r\n\t\tconst {visible, onCancel, form, permissions} = this.props;\r\n\t\tconst {getFieldDecorator} = form;\r\n\r\n\t\treturn (\r\n\t\t\t<Modal visible={visible}\r\n\t\t\t       confirmLoading={confirmLoading}\r\n\t\t\t       title={\r\n\t\t\t\t       <FormattedMessage\r\n\t\t\t\t\t       defaultMessage=\"Edit Role\"\r\n\t\t\t\t\t       id=\"admin.role.edit_role\"/>\r\n\t\t\t       }\r\n\t\t\t       onCancel={onCancel}\r\n\t\t\t       onOk={this.handleSubmit}\r\n\t\t\t       okText={\r\n\t\t\t\t       <span>\r\n\t\t\t\t\t       <FormattedMessage\r\n\t\t\t\t\t\t       defaultMessage=\"Submit\"\r\n\t\t\t\t\t\t       id=\"common.submit\"/>\r\n\t\t\t\t       </span>\r\n\t\t\t       }>\r\n\t\t\t\t<Alert type=\"info\"\r\n\t\t\t\t       className=\"mb-3\"\r\n\t\t\t\t       message={\r\n\t\t\t\t\t       <FormattedMessage\r\n\t\t\t\t\t\t       defaultMessage={\r\n\t\t\t\t\t\t\t       \"The level assigned to a role is used to prioritize user actions.\"\r\n\t\t\t\t\t\t       }\r\n\t\t\t\t\t\t       id=\"admin.roles.info\"/>\r\n\t\t\t\t       }\r\n\t\t\t\t       showIcon/>\r\n\r\n\t\t\t\t<Form.Item labelCol={{xs : 8}}\r\n\t\t\t\t           wrapperCol={{xs : 16}}\r\n\t\t\t\t           labelAlign=\"left\"\r\n\t\t\t\t           label={\r\n\t\t\t\t\t           <FormattedMessage\r\n\t\t\t\t\t\t           defaultMessage=\"Name\"\r\n\t\t\t\t\t\t           id=\"admin.role.name\"/>\r\n\t\t\t\t           }>\r\n\t\t\t\t\t{getFieldDecorator(\"name\", {\r\n\t\t\t\t\t\trules : [{required : true}],\r\n\t\t\t\t\t})(<Input/>)}\r\n\t\t\t\t</Form.Item>\r\n\r\n\t\t\t\t<Form.Item labelCol={{xs : 8}}\r\n\t\t\t\t           wrapperCol={{xs : 16}}\r\n\t\t\t\t           labelAlign=\"left\"\r\n\t\t\t\t           label={\r\n\t\t\t\t\t           <FormattedMessage\r\n\t\t\t\t\t\t           defaultMessage=\"Level\"\r\n\t\t\t\t\t\t           id=\"admin.role.level\"/>\r\n\t\t\t\t           }>\r\n\t\t\t\t\t{getFieldDecorator(\"level\", {\r\n\t\t\t\t\t\trules : [{required : true}],\r\n\t\t\t\t\t})(<InputNumber min={1} max={99}/>)}\r\n\t\t\t\t</Form.Item>\r\n\r\n\t\t\t\t<Divider>\r\n\t\t\t\t\t<FormattedMessage\r\n\t\t\t\t\t\tdefaultMessage=\"Permissions\"\r\n\t\t\t\t\t\tid=\"common.permissions\"/>\r\n\t\t\t\t</Divider>\r\n\r\n\t\t\t\t{permissions.map((permission) => (\r\n\t\t\t\t\t<Form.Item key={permission.id}\r\n\t\t\t\t\t           className=\"mb-0 mx-3\">\r\n\t\t\t\t\t\t{getFieldDecorator(permission.name, {\r\n\t\t\t\t\t\t\tvaluePropName : 'checked'\r\n\t\t\t\t\t\t})(\r\n\t\t\t\t\t\t\t<Checkbox>\r\n\t\t\t\t\t\t\t\t{startCase(permission.name)}\r\n\t\t\t\t\t\t\t</Checkbox>\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t\t</Form.Item>\r\n\t\t\t\t))}\r\n\r\n\t\t\t\t<Form.Item className=\"d-none\">\r\n\t\t\t\t\t{getFieldDecorator(\"id\", {\r\n\t\t\t\t\t\trules : [{required : true}],\r\n\t\t\t\t\t})(<Input/>)}\r\n\t\t\t\t</Form.Item>\r\n\t\t\t</Modal>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nconst mapStateToProps = ({\r\n\tcollections : {\r\n\t\tcoins\r\n\t},\r\n}) => ({\r\n\tcoins\r\n});\r\n\r\nexport default pipe(\r\n\tconnect(\r\n\t\tmapStateToProps\r\n\t),\r\n\tformHelper(),\r\n)(EditRoleModal);","import React, {Component} from 'react';\r\nimport {defineMessages, FormattedMessage} from \"react-intl\";\r\nimport ApiService from \"admin/support/Services/Api\";\r\nimport {isEmpty, startCase} from \"lodash\";\r\nimport {handleFormError, handleFormSuccess} from \"admin/support/utils/promise\";\r\nimport {pipe} from \"admin/support/utils/common\";\r\nimport formHelper from \"admin/support/Helpers/Form\";\r\nimport {Alert, Checkbox, Divider, Form, Input, InputNumber, Modal} from \"antd\";\r\n\r\nconst messages = defineMessages({\r\n\tsuccessful : {\r\n\t\tdefaultMessage : \"A new role has been created successfully.\",\r\n\t\tid             : \"admin.roles.create_role_successful\"\r\n\t},\r\n});\r\n\r\nclass NewRoleModal extends Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\r\n\t\tthis.api = new ApiService();\r\n\r\n\t\tthis.state = {\r\n\t\t\tconfirmLoading : false\r\n\t\t}\r\n\t}\r\n\r\n\thandleSubmit = () => {\r\n\t\tconst {axios, route} = this.api;\r\n\t\tconst endpoint = route('admin.roles.create');\r\n\t\tconst {form, intl} = this.props;\r\n\r\n\t\tform.validateFields((errors, values) => {\r\n\t\t\tif (isEmpty(errors)) {\r\n\t\t\t\taxios.post(endpoint.url(), values)\r\n\t\t\t\t\t.then(response => handleFormSuccess(response, form, (data) => {\r\n\t\t\t\t\t\tthis.setState({confirmLoading : false});\r\n\t\t\t\t\t\tthis.triggerSuccess(data);\r\n\t\t\t\t\t}, intl.formatMessage(messages.successful)))\r\n\t\t\t\t\t.catch(error => handleFormError(error, form, values, () => {\r\n\t\t\t\t\t\tthis.setState({confirmLoading : false});\r\n\t\t\t\t\t}));\r\n\r\n\t\t\t\tthis.setState({confirmLoading : true});\r\n\t\t\t}\r\n\t\t});\r\n\t};\r\n\r\n\ttriggerSuccess(data) {\r\n\t\tconst {onSuccess} = this.props;\r\n\t\tif (typeof onSuccess === \"function\") {\r\n\t\t\treturn onSuccess(data);\r\n\t\t}\r\n\t}\r\n\r\n\tcomponentWillUnmount() {\r\n\t\tthis.api.cancel()\r\n\t}\r\n\r\n\trender() {\r\n\t\tconst {confirmLoading} = this.state;\r\n\t\tconst {visible, onCancel, form, permissions} = this.props;\r\n\t\tconst {getFieldDecorator} = form;\r\n\r\n\t\treturn (\r\n\t\t\t<Modal visible={visible}\r\n\t\t\t       confirmLoading={confirmLoading}\r\n\t\t\t       title={\r\n\t\t\t\t       <FormattedMessage\r\n\t\t\t\t\t       defaultMessage=\"Create Role\"\r\n\t\t\t\t\t       id=\"admin.role.create_role\"/>\r\n\t\t\t       }\r\n\t\t\t       onCancel={onCancel}\r\n\t\t\t       onOk={this.handleSubmit}\r\n\t\t\t       okText={\r\n\t\t\t\t       <span>\r\n\t\t\t\t\t       <FormattedMessage\r\n\t\t\t\t\t\t       defaultMessage=\"Submit\"\r\n\t\t\t\t\t\t       id=\"common.submit\"/>\r\n\t\t\t\t       </span>\r\n\t\t\t       }>\r\n\t\t\t\t<Alert type=\"info\"\r\n\t\t\t\t       className=\"mb-3\"\r\n\t\t\t\t       message={\r\n\t\t\t\t\t       <FormattedMessage\r\n\t\t\t\t\t\t       defaultMessage={\r\n\t\t\t\t\t\t\t       \"The level assigned to a role is used to prioritize user actions.\"\r\n\t\t\t\t\t\t       }\r\n\t\t\t\t\t\t       id=\"admin.role.level_info\"/>\r\n\t\t\t\t       }\r\n\t\t\t\t       showIcon/>\r\n\r\n\t\t\t\t<Form.Item labelCol={{xs : 8}}\r\n\t\t\t\t           wrapperCol={{xs : 16}}\r\n\t\t\t\t           labelAlign=\"left\"\r\n\t\t\t\t           label={\r\n\t\t\t\t\t           <FormattedMessage\r\n\t\t\t\t\t\t           defaultMessage=\"Name\"\r\n\t\t\t\t\t\t           id=\"admin.role.name\"/>\r\n\t\t\t\t           }>\r\n\t\t\t\t\t{getFieldDecorator(\"name\", {\r\n\t\t\t\t\t\trules : [{required : true}],\r\n\t\t\t\t\t})(<Input/>)}\r\n\t\t\t\t</Form.Item>\r\n\r\n\t\t\t\t<Form.Item labelCol={{xs : 8}}\r\n\t\t\t\t           wrapperCol={{xs : 16}}\r\n\t\t\t\t           labelAlign=\"left\"\r\n\t\t\t\t           label={\r\n\t\t\t\t\t           <FormattedMessage\r\n\t\t\t\t\t\t           defaultMessage=\"Level\"\r\n\t\t\t\t\t\t           id=\"admin.role.level\"/>\r\n\t\t\t\t           }>\r\n\t\t\t\t\t{getFieldDecorator(\"level\", {\r\n\t\t\t\t\t\trules : [{required : true}],\r\n\t\t\t\t\t})(\r\n\t\t\t\t\t\t<InputNumber min={1} max={99}/>\r\n\t\t\t\t\t)}\r\n\t\t\t\t</Form.Item>\r\n\r\n\t\t\t\t<Divider>\r\n\t\t\t\t\t<FormattedMessage\r\n\t\t\t\t\t\tdefaultMessage=\"Permissions\"\r\n\t\t\t\t\t\tid=\"common.permissions\"/>\r\n\t\t\t\t</Divider>\r\n\r\n\t\t\t\t{permissions.map((permission) => (\r\n\t\t\t\t\t<Form.Item key={permission.id}\r\n\t\t\t\t\t           className=\"mb-0 mx-3\">\r\n\t\t\t\t\t\t{getFieldDecorator(permission.name, {\r\n\t\t\t\t\t\t\tvaluePropName : 'checked'\r\n\t\t\t\t\t\t})(\r\n\t\t\t\t\t\t\t<Checkbox>\r\n\t\t\t\t\t\t\t\t{startCase(permission.name)}\r\n\t\t\t\t\t\t\t</Checkbox>\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t\t</Form.Item>\r\n\t\t\t\t))}\r\n\t\t\t</Modal>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default pipe(\r\n\tformHelper(),\r\n)(NewRoleModal);","import React, {Component} from 'react';\r\nimport {defineMessages, FormattedMessage, injectIntl} from \"react-intl\";\r\nimport Widget from \"admin/components/Widget\";\r\nimport ApiService from \"admin/support/Services/Api\";\r\nimport {handleError, handleSuccess} from \"admin/support/utils/promise\";\r\nimport {Button, Table} from \"antd\";\r\nimport {pipe} from \"admin/support/utils/common\";\r\nimport EditRoleModal from \"./components/EditRoleModal\";\r\nimport {assign, filter, forEach, map, pick} from \"lodash\";\r\nimport NewRoleModal from \"./components/NewRoleModal\";\r\n\r\nconst messages = defineMessages({\r\n\tactionSuccessful : {\r\n\t\tdefaultMessage : \"Your action was successful.\",\r\n\t\tid             : \"admin.role.action_successful\"\r\n\t},\r\n});\r\n\r\nclass Roles extends Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\r\n\t\tthis.api = new ApiService();\r\n\r\n\t\tthis.state = {\r\n\t\t\tnewRole     : false,\r\n\t\t\teditRole    : false,\r\n\t\t\troles       : [],\r\n\t\t\tpermissions : [],\r\n\t\t\tloading     : false,\r\n\t\t}\r\n\t}\r\n\r\n\tcomponentDidMount() {\r\n\t\tthis.fetchData();\r\n\t}\r\n\r\n\tfetchData() {\r\n\t\tconst {axios, route} = this.api;\r\n\t\tconst endpoint = route('admin.roles.data');\r\n\r\n\t\taxios.get(endpoint.url())\r\n\t\t\t.then(response => handleSuccess(response, (data) => {\r\n\t\t\t\tthis.setState({\r\n\t\t\t\t\troles       : data.roles || [],\r\n\t\t\t\t\tpermissions : data.permissions || [],\r\n\t\t\t\t\tloading     : false\r\n\t\t\t\t});\r\n\t\t\t}))\r\n\r\n\t\t\t.catch(error => handleError(error, () => {\r\n\t\t\t\tthis.setState({loading : false});\r\n\t\t\t}));\r\n\r\n\t\tthis.setState({loading : true});\r\n\t}\r\n\r\n\tdelete(role) {\r\n\t\tconst {axios, route} = this.api;\r\n\t\tconst {intl} = this.props;\r\n\r\n\t\tconst endpoint = route('admin.roles.delete', {\r\n\t\t\trole : role.id\r\n\t\t});\r\n\r\n\t\taxios.delete(endpoint.url())\r\n\t\t\t.then(response => handleSuccess(response, () => {\r\n\t\t\t\tthis.fetchData();\r\n\t\t\t}, intl.formatMessage(messages.actionSuccessful)))\r\n\t\t\t.catch(error => handleError(error));\r\n\t};\r\n\r\n\tedit(record) {\r\n\t\tconst {permissions} = this.state;\r\n\t\tthis.editRoleForm.resetFields();\r\n\r\n\t\tconst names = map(permissions, 'name');\r\n\r\n\t\tconst rolePermissions = filter(record.permissions, (o) => {\r\n\t\t\treturn names.includes(o.name);\r\n\t\t});\r\n\r\n\t\tlet fields = pick(record, ['name', 'level', 'id']);\r\n\r\n\t\tforEach(rolePermissions, (o) => {\r\n\t\t\tfields = assign(fields, {[o.name] : true})\r\n\t\t});\r\n\t\tthis.editRoleForm.setFieldsValue(fields);\r\n\t\tthis.toggleEditRoleModal();\r\n\t}\r\n\r\n\tcolumns = () => {\r\n\t\treturn [\r\n\t\t\t{\r\n\t\t\t\ttitle     : <FormattedMessage\r\n\t\t\t\t\tdefaultMessage=\"Name\"\r\n\t\t\t\t\tid=\"admin.roles.name\"/>,\r\n\t\t\t\tdataIndex : 'name',\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\ttitle     : <FormattedMessage\r\n\t\t\t\t\tdefaultMessage=\"Level\"\r\n\t\t\t\t\tid=\"admin.roles.level\"/>,\r\n\t\t\t\tdataIndex : 'level',\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\ttitle     : <FormattedMessage\r\n\t\t\t\t\tdefaultMessage=\"Total Users\"\r\n\t\t\t\t\tid=\"admin.roles.total_users\"/>,\r\n\t\t\t\tdataIndex : 'users_count',\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\ttitle  : <FormattedMessage\r\n\t\t\t\t\tdefaultMessage=\"Action\"\r\n\t\t\t\t\tid=\"common.action\"/>,\r\n\t\t\t\tkey    : 'action',\r\n\t\t\t\trender : (text, record) => (\r\n\t\t\t\t\t<div style={{whiteSpace : 'nowrap'}}>\r\n\t\t\t\t\t\t<Button className=\"m-0 mr-2\" shape=\"circle\"\r\n\t\t\t\t\t\t        onClick={() => this.edit(record)}\r\n\t\t\t\t\t\t        type=\"primary\" icon=\"edit\"/>\r\n\r\n\t\t\t\t\t\t<Button className=\"m-0\" shape=\"circle\"\r\n\t\t\t\t\t\t        onClick={() => this.delete(record)}\r\n\t\t\t\t\t\t        type=\"danger\" icon=\"delete\"/>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t),\r\n\t\t\t},\r\n\t\t];\r\n\t};\r\n\r\n\tcomponentWillUnmount() {\r\n\t\tthis.api.cancel()\r\n\t}\r\n\r\n\ttoggleNewRoleModal = () => {\r\n\t\tthis.setState(({newRole}) => {\r\n\t\t\treturn {newRole : !newRole}\r\n\t\t})\r\n\t};\r\n\r\n\ttoggleEditRoleModal = () => {\r\n\t\tthis.setState(({editRole}) => {\r\n\t\t\treturn {editRole : !editRole}\r\n\t\t})\r\n\t};\r\n\r\n\thandleEditRoleSuccess = () => {\r\n\t\tthis.toggleEditRoleModal();\r\n\t\tthis.fetchData();\r\n\t};\r\n\r\n\r\n\thandleNewRoleSuccess = () => {\r\n\t\tthis.toggleNewRoleModal();\r\n\t\tthis.fetchData();\r\n\t};\r\n\r\n\trender() {\r\n\t\tconst {roles, permissions, loading, newRole, editRole} = this.state;\r\n\r\n\t\treturn (\r\n\t\t\t<Widget styleName=\"cp-card-table\"\r\n\t\t\t        extra={\r\n\t\t\t\t        <Button className=\"m-0\" shape=\"circle\"\r\n\t\t\t\t                onClick={this.toggleNewRoleModal}\r\n\t\t\t\t                type=\"primary\" icon=\"plus\"/>\r\n\t\t\t        }\r\n\t\t\t        title={\r\n\t\t\t\t        <FormattedMessage\r\n\t\t\t\t\t        defaultMessage=\"Manage Roles\"\r\n\t\t\t\t\t        id=\"admin.manage_roles\"/>\r\n\t\t\t        }>\r\n\t\t\t\t<EditRoleModal permissions={permissions}\r\n\t\t\t\t               onSuccess={this.handleEditRoleSuccess}\r\n\t\t\t\t               ref={(form) => this.editRoleForm = form}\r\n\t\t\t\t               visible={editRole}\r\n\t\t\t\t               onCancel={this.toggleEditRoleModal}/>\r\n\r\n\t\t\t\t<Table className=\"mt-1\"\r\n\t\t\t\t       columns={this.columns()}\r\n\t\t\t\t       rowKey=\"id\"\r\n\t\t\t\t       scroll={{x : true, y : false}}\r\n\t\t\t\t       size=\"middle\"\r\n\t\t\t\t       dataSource={roles}\r\n\t\t\t\t       loading={loading}/>\r\n\r\n\t\t\t\t<NewRoleModal permissions={permissions}\r\n\t\t\t\t              onSuccess={this.handleNewRoleSuccess}\r\n\t\t\t\t              ref={(form) => this.newRoleForm = form}\r\n\t\t\t\t              visible={newRole}\r\n\t\t\t\t              onCancel={this.toggleNewRoleModal}/>\r\n\t\t\t</Widget>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default pipe(\r\n\tinjectIntl\r\n)(Roles);\r\n\r\nif (module.hot) {\r\n\tmodule.hot.accept()\r\n}"],"sourceRoot":""}